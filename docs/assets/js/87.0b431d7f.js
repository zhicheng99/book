(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{347:function(t,n,e){"use strict";e.r(n);var i=e(10),s=Object(i.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h1",{attrs:{id:"文件分片代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#文件分片代码"}},[this._v("#")]),this._v(" 文件分片代码")]),this._v(" "),n("p",[this._v("注：文件是File类型")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("var fileChunk = function(options = {file:''}){\n\n\n\t\tvar setting ={\n\t\t\t...options\n\t\t}\n\t\tvar start = 0,\n\t\tend = 0,\n\t\tchunkSize = 1024000,\n\t\tcurrentChunk = 0,\n\t\ttmpDataList = [];\n\n\t\tvar taskId =(new Date()).getTime()+''+parseInt(Math.random()*10000000);\n\t\tvar chunks = Math.ceil(setting.file.size / chunkSize);\n\t\tconsole.log(taskId,chunks);\n\n\t\tvar  blobSlice =\n\t        window.File.prototype.slice ||\n\t        window.File.prototype.mozSlice ||\n\t        window.File.prototype.webkitSlice;\n\t \n\n\n\t    var inner = function(){\n\t    \t(start = currentChunk * chunkSize),\n\t\t                (end =\n\t\t                    start + chunkSize >= setting.file.size\n\t\t                        ? setting.file.size\n\t\t                        : start + chunkSize);\n\n\t\t            let pieceFile = blobSlice.call(\n\t\t                setting.file,\n\t\t                start,\n\t\t                end\n\t\t            );\n\n\t\t            console.log(pieceFile);\n\n\n\t\t            pieceFile.name = setting.file.name;\n\t\t            let tmpObj = {\n\t\t            \tfileName:setting.file.name,\n\t\t            \tfileType:setting.file.type,\n\t\t                file: pieceFile,\n\t\t                // currentSize: end - start,\n\t\t                // currentNum: currentChunk,\n\t\t                taskId:taskId,\n\t\t                chunk:tmpDataList.length,\n\t\t                totalChunk:chunks,\n\t\t                totalSize:setting.file.size\n\t\t\t\t    };\n\n\t\t\t\t    tmpDataList.push(tmpObj);\n\t\t            currentChunk++;\n\n\t\t\tif (currentChunk < chunks) {\n\t\t\t   inner();\n\t\t\t}\t  \n\t    }\n\t\t\t   inner();\n\n\n\n\t    return tmpDataList;\n}\nmodule.exports = fileChunk;\n\n")])])]),n("backTop")],1)}),[],!1,null,null,null);n.default=s.exports}}]);