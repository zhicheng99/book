(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{367:function(t,a,n){"use strict";n.r(a);var e=n(10),l=Object(e.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"electron安装-运行-打包成桌面应用-打包成安装文件-开机自启动"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#electron安装-运行-打包成桌面应用-打包成安装文件-开机自启动"}},[t._v("#")]),t._v(" electron安装+运行+打包成桌面应用+打包成安装文件+开机自启动")]),t._v(" "),n("p",[t._v("1.初始化node项目，生成package.json文件")]),t._v(" "),n("p",[t._v("?")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("1")]),t._v(" "),n("th",[n("code",[t._v("npm init")])])])]),t._v(" "),n("tbody")]),t._v(" "),n("p",[t._v("2.安装electron，并保存为开发依赖项")]),t._v(" "),n("p",[t._v("?")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("1")]),t._v(" "),n("th",[n("code",[t._v("npm install electron -D")])])])]),t._v(" "),n("tbody")]),t._v(" "),n("p",[t._v("3.根目录下新建index.js文件")]),t._v(" "),n("p",[n("img",{attrs:{src:"Public/upload/20210824/16298015216.gif",alt:"复制代码"}})]),t._v(" "),n("pre",[t._v("const {app, BrowserWindow} = require('electron'"),n("span",{staticStyle:{color:"rgba(0, 0, 0, 1)"}},[t._v(")\n\nlet mainWindow\n\n")]),n("span",{staticStyle:{color:"rgba(0, 0, 255, 1)"}},[t._v("function")]),n("span",{staticStyle:{color:"rgba(0, 0, 0, 1)"}},[t._v(" createWindow () {\n  mainWindow ")]),t._v("= "),n("span",{staticStyle:{color:"rgba(0, 0, 255, 1)"}},[t._v("new")]),t._v(" BrowserWindow({width: 800, height: 600"),n("span",{staticStyle:{color:"rgba(0, 0, 0, 1)"}},[t._v("})\n\n  mainWindow.loadFile(")]),t._v("'index.html'"),n("span",{staticStyle:{color:"rgba(0, 0, 0, 1)"}},[t._v(")\n\n  ")]),n("span",{staticStyle:{color:"rgba(0, 128, 0, 1)"}},[t._v("//")]),n("span",{staticStyle:{color:"rgba(0, 128, 0, 1)"}},[t._v(" mainWindow.webContents.openDevTools()")]),t._v("\n"),n("span",{staticStyle:{color:"rgba(0, 0, 0, 1)"}},[t._v("\n  mainWindow.on(")]),t._v("'closed', "),n("span",{staticStyle:{color:"rgba(0, 0, 255, 1)"}},[t._v("function")]),n("span",{staticStyle:{color:"rgba(0, 0, 0, 1)"}},[t._v(" () {\n    mainWindow ")]),t._v("= "),n("span",{staticStyle:{color:"rgba(0, 0, 255, 1)"}},[t._v("null")]),n("span",{staticStyle:{color:"rgba(0, 0, 0, 1)"}},[t._v("\n  })\n}\n\napp.on(")]),t._v("'ready'"),n("span",{staticStyle:{color:"rgba(0, 0, 0, 1)"}},[t._v(", createWindow)\n\napp.on(")]),t._v("'window-all-closed', "),n("span",{staticStyle:{color:"rgba(0, 0, 255, 1)"}},[t._v("function")]),n("span",{staticStyle:{color:"rgba(0, 0, 0, 1)"}},[t._v(" () {\n  ")]),n("span",{staticStyle:{color:"rgba(0, 0, 255, 1)"}},[t._v("if")]),t._v(" (process.platform !== 'darwin'"),n("span",{staticStyle:{color:"rgba(0, 0, 0, 1)"}},[t._v(") {\n    app.quit()\n  }\n})\n\napp.on(")]),t._v("'activate', "),n("span",{staticStyle:{color:"rgba(0, 0, 255, 1)"}},[t._v("function")]),n("span",{staticStyle:{color:"rgba(0, 0, 0, 1)"}},[t._v(" () {\n  ")]),n("span",{staticStyle:{color:"rgba(0, 128, 0, 1)"}},[t._v("//")]),n("span",{staticStyle:{color:"rgba(0, 128, 0, 1)"}},[t._v(" On OS X it's common to re-create a window in the app when the")]),t._v("\n  "),n("span",{staticStyle:{color:"rgba(0, 128, 0, 1)"}},[t._v("//")]),n("span",{staticStyle:{color:"rgba(0, 128, 0, 1)"}},[t._v(" dock icon is clicked and there are no other windows open.")]),t._v("\n  "),n("span",{staticStyle:{color:"rgba(0, 0, 255, 1)"}},[t._v("if")]),t._v(" (mainWindow === "),n("span",{staticStyle:{color:"rgba(0, 0, 255, 1)"}},[t._v("null")]),n("span",{staticStyle:{color:"rgba(0, 0, 0, 1)"}},[t._v(") {\n    createWindow()\n  }\n})")])]),t._v(" "),n("p",[n("img",{attrs:{src:"Public/upload/20210824/16298015216.gif",alt:"复制代码"}})]),t._v(" "),n("p",[t._v("4.根目录下新建index.html文件")]),t._v(" "),n("p",[n("img",{attrs:{src:"Public/upload/20210824/16298015216.gif",alt:"复制代码"}})]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    <h1>Hello Electron!!</h1>\n</body>\n</html>\n')])])]),n("p",[n("img",{attrs:{src:"Public/upload/20210824/16298015216.gif",alt:"复制代码"}})]),t._v(" "),n("p",[t._v("5.打开package.json文件，新建命令")]),t._v(" "),n("pre",[t._v('"scripts"'),n("span",{staticStyle:{color:"rgba(0, 0, 0, 1)"}},[t._v(": {\n   ")]),t._v('"start": "electron ."'),n("span",{staticStyle:{color:"rgba(0, 0, 0, 1)"}},[t._v("  \n}")])]),t._v(" "),n("p",[t._v("6.执行启动命令")]),t._v(" "),n("pre",[t._v("npm start")]),t._v(" "),n("p",[n("img",{attrs:{src:"Public/upload/20210824/16298015210.png",alt:""}})]),t._v(" "),n("p",[t._v("目前为止，一个最糙的demo就完成了，但这样是远远不够的，作为一个桌面应用程序，我们希望点击exe文件就能直接启动应用，而不是打开命令行，输入启动命令。这一步就需要打包工具来完成了。")]),t._v(" "),n("p",[t._v("7.安装electron打包工具electron-packager")]),t._v(" "),n("pre",[t._v("npm install electron-packager -g")]),t._v(" "),n("p",[t._v("8.配置打包命令")]),t._v(" "),n("pre",[t._v('"scripts"'),n("span",{staticStyle:{color:"rgba(0, 0, 0, 1)"}},[t._v(": {\n    ")]),t._v('"start": "electron ."'),n("span",{staticStyle:{color:"rgba(0, 0, 0, 1)"}},[t._v(",\n    ")]),t._v('"pack": "electron-packager . myClient --win --out ../myClient --arch=x64 --app-version=0.0.1 --electron-version=2.0.0"'),n("span",{staticStyle:{color:"rgba(0, 0, 0, 1)"}},[t._v("\n  }")])]),t._v(" "),n("p",[t._v("命令结构如下（根据实际情况修改）：")]),t._v(" "),n("p",[t._v("“.”：需要打包的应用目录（即当前目录），")]),t._v(" "),n("p",[t._v("“myClient”：应用名称，")]),t._v(" "),n("p",[t._v("“--win”：打包平台（以Windows为例），")]),t._v(" "),n("p",[t._v("“--out ../myClient”：输出目录，")]),t._v(" "),n("p",[t._v("“--arch=64”：64位，")]),t._v(" "),n("p",[t._v("“--app-version=0.0.1”：应用版本，")]),t._v(" "),n("p",[t._v("“--electron-version=2.0.0”：electron版本")]),t._v(" "),n("p",[t._v("执行打包命令：")]),t._v(" "),n("pre",[t._v("npm run pack")]),t._v(" "),n("p",[t._v("打包完成后，找到输出目录，打开打包完成后的文件夹，")]),t._v(" "),n("p",[n("img",{attrs:{src:"Public/upload/20210824/16298015229.png",alt:""}})]),t._v(" "),n("p",[t._v("可以看到生成了.exe的执行文件以及其他的一堆配置文件，双击myClient.exe就可以打开应用程序了。")]),t._v(" "),n("p",[t._v("现在，我们已经得到了应用程序的绿色版本（无需安装，拷贝整个文件目录之后即可使用），但是作为客户端应用程序，我们更希望能直接得到一个安装包，安装之后通过桌面快捷方式的形式去访问，这时候就需要Inno Setup出场了。")]),t._v(" "),n("p",[t._v("9.下载安装Inno Setup")]),t._v(" "),n("p",[t._v("下载地址：https://pc.qq.com/detail/13/detail_1313.html")]),t._v(" "),n("p",[t._v("安装完成以后打开Inno Setup客户端")]),t._v(" "),n("p",[t._v("a. file->new，新建脚本")]),t._v(" "),n("p",[n("img",{attrs:{src:"Public/upload/20210824/16298015228.png",alt:""}})]),t._v(" "),n("p",[t._v("b.填写应用程序信息，黑体为必填项")]),t._v(" "),n("p",[t._v("Application name： 应用名称；")]),t._v(" "),n("p",[t._v("Application version：应用版本；")]),t._v(" "),n("p",[t._v("Application publisher：发行单位（可选）；")]),t._v(" "),n("p",[t._v("Application websiter：应用程序网址（可选）；")]),t._v(" "),n("p",[n("img",{attrs:{src:"Public/upload/20210824/16298015227.png",alt:""}})]),t._v(" "),n("p",[t._v("c.完善应用文件信息")]),t._v(" "),n("p",[t._v("Application destination base folder：应用程序目标基本文件夹，可默认也可自定义；")]),t._v(" "),n("p",[t._v("Application folder name：应用文件夹名称；")]),t._v(" "),n("p",[t._v("Allow user to change the application folder：勾选，允许用户自定义安装位置；")]),t._v(" "),n("p",[n("img",{attrs:{src:"Public/upload/20210824/16298015223.png",alt:""}})]),t._v(" "),n("p",[t._v("d.指定属于应用程序的文件")]),t._v(" "),n("p",[t._v("Application main executable file：应用程序主执行文件，即第8步中打包生成的.exe文件；")]),t._v(" "),n("p",[t._v("Allow user to start the application after Setup has finished：允许用户在安装完成后启动应用程序；")]),t._v(" "),n("p",[t._v("Add folders：添加应用程序文件，选择第8步中打包出的文件根目录即可，要把所有.dll文件及其他配置文件都包含进去；")]),t._v(" "),n("p",[n("img",{attrs:{src:"Public/upload/20210824/162980152210.png",alt:""}})]),t._v(" "),n("p",[t._v("点击添加之后可以看到：")]),t._v(" "),n("p",[n("img",{attrs:{src:"Public/upload/20210824/16298015238.png",alt:""}})]),t._v(" "),n("p",[t._v("文件目录以自己的实际情况为准。")]),t._v(" "),n("p",[t._v("e.指定应用程序的快捷方式，勾选默认的两项即可，即“创建主执行程序的快捷方式到公共开始菜单程序文件夹”、“允许用户创建桌面快捷方式”")]),t._v(" "),n("p",[n("img",{attrs:{src:"Public/upload/20210824/16298015231.png",alt:""}})]),t._v(" "),n("p",[t._v("f.指定安装期间要显示的文档文件")]),t._v(" "),n("p",[t._v("License file：许可文件；")]),t._v(" "),n("p",[t._v("Information file shown before installation：安装之前显示信息文件；")]),t._v(" "),n("p",[t._v("Information file shown after installation：安装之后显示信息文件；")]),t._v(" "),n("p",[n("img",{attrs:{src:"Public/upload/20210824/16298015233.png",alt:""}})]),t._v(" "),n("p",[t._v("g.指定应包括的安装语言（汉化版的有简体中文选项），选择之后点击下一步")]),t._v(" "),n("p",[n("img",{attrs:{src:"Public/upload/20210824/16298015238.png",alt:""}})]),t._v(" "),n("p",[t._v("h.指定基本编译设置")]),t._v(" "),n("p",[t._v("Custom compiler output folder：自定义编译器输出文件夹，即最终编译出的安装包要放哪个位置；")]),t._v(" "),n("p",[t._v("Compiler output base file name：编辑器输出基本文件名，即安装包名称；")]),t._v(" "),n("p",[t._v("Custom Setup icon file：自定义安装程序图标文件；")]),t._v(" "),n("p",[t._v("Setup password：安装密码；")]),t._v(" "),n("p",[n("img",{attrs:{src:"Public/upload/20210824/16298015232.png",alt:""}})]),t._v(" "),n("p",[t._v("i.点击下一步")]),t._v(" "),n("p",[n("img",{attrs:{src:"Public/upload/20210824/16298015245.png",alt:""}})]),t._v(" "),n("p",[t._v("剩下的就是一路确定了，会询问你在编译之前要不要保存你的脚本（上面的配置步骤，最终会生成一个编译脚本文件），点击保存，先不要编译，打开脚本文件，新增配置项，修改注册表，设置开机自启动：")]),t._v(" "),n("p",[n("img",{attrs:{src:"Public/upload/20210824/16298015241.png",alt:""}})]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('[Registry]\nRoot: HKLM; Subkey: "SOFTWAREMicrosoftWindowsCurrentVersionRun"; ValueType: string; ValueName: "testrun"; ValueData: "{app}{#MyAppExeName}"\n')])])]),n("p",[t._v("然后，执行编译文件：build->compile")]),t._v(" "),n("p",[n("img",{attrs:{src:"Public/upload/20210824/16298015249.png",alt:""}})]),t._v(" "),n("p",[n("img",{attrs:{src:"Public/upload/20210824/16298015244.png",alt:""}})]),t._v(" "),n("p",[t._v("至此，所有步骤已经完成了，赶快去看看你的安装包能不能正常使用吧。")]),t._v(" "),n("p",[t._v("文章来源：https://www.cnblogs.com/kakayang/p/9559777.html")]),t._v(" "),n("backTop")],1)}),[],!1,null,null,null);a.default=l.exports}}]);