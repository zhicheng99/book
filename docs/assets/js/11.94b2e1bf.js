(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{292:function(t,n,e){"use strict";e.r(n);var o=e(10),i=Object(o.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h1",{attrs:{id:"图片裁剪组件vue"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#图片裁剪组件vue"}},[this._v("#")]),this._v(" 图片裁剪组件vue")]),this._v(" "),n("p",[n("img",{attrs:{src:"Public/upload/2020-06-30/202006301924134869.png",alt:"5efb20d71edbc.png"}})]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('<template>\n\t<div>\n\t\t<el-dialog\n\t\t    title="图片裁剪"\n\t\t    :visible.sync="show" \n\t\t    @close="close">\n\n\t\t    <div style="height: 400px;">\n\t\t    \t<VueCropper  \n\t\t\t\t  ref="cropper"\n\t\t\t\t  v-bind:img="option.img" \n\t\t\t\t  :outputSize="option.size"\n                :outputType="option.outputType"\n                :info="true"\n                :full="option.full"\n                :canMove="option.canMove"\n                :canMoveBox="option.canMoveBox"\n                :original="option.original"\n                :autoCrop="option.autoCrop"\n                :fixed="option.fixed"\n                :fixedNumber="option.fixedNumber"\n                :centerBox="option.centerBox"\n                :infoTrue="option.infoTrue"\n                :fixedBox="option.fixedBox" \n\t\t\t\t></VueCropper> \n\n\n\t\t    </div>\n\t\t  \n\t\t    <span slot="footer">\n\t\t        <el-button size="small" @click="close(\'\')">取 消</el-button>\n\t\t        <el-button size="small" type="primary" @click="cut">确 定</el-button>\n\t\t    </span>\n\t\t</el-dialog>\n\t</div>\n</template>\n<script> \n\timport { VueCropper }  from \'vue-cropper\'\n\n\texport default{\n\t\tcomponents:{\n\t\t\tVueCropper\n\t\t},\n\t\tprops:[\'isShow\',\'imgUrl\',\'callBack\'],\n\t\tdata(){\n\t\t\treturn {\n\t\t\t\tshow:false,\n\t\t\t\toption:{\n\t\t\t\t\timg:\'\',  \n\t\t\t\t\tinfo: true, // 裁剪框的大小信息\n                    outputSize: 1, // 裁剪生成图片的质量\n                    outputType: \'png\', // 裁剪生成图片的格式\n                    canScale: true, // 图片是否允许滚轮缩放\n                    autoCrop: true, // 是否默认生成截图框\n                    autoCropWidth: 600, // 默认生成截图框宽度\n                    autoCropHeight: 800, // 默认生成截图框高度\n                    fixedBox: false, // 固定截图框大小 不允许改变\n                    fixed: true, // 是否开启截图框宽高固定比例\n                    fixedNumber: [3, 4], // 截图框的宽高比例\n                    full: true, // 是否输出原图比例的截图\n                    canMoveBox: true, // 截图框能否拖动\n                    original: true, // 上传图片按照原始比例渲染\n                    high: true,\n                    centerBox: true, // 截图框是否被限制在图片里面\n                    infoTrue: true // true 为展示真实输出图片宽高 false 展示看到的截图框宽高\n\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmethods:{\n\t\t\tclose:function(url=\'\'){\n\t\t\t\tthis.$emit(\'update:isShow\',false);\n\t\t\t\tthis.callBack && this.callBack(url);\n\n\t\t\t},\n\t\t\t// 将base64的图片转换为file文件\n\t        convertBase64UrlToBlob(urlData) {\n\t            let bytes = window.atob(urlData.split(\',\')[1]);//去掉url的头，并转换为byte\n\t            //处理异常,将ascii码小于0的转换为大于0\n\t            let ab = new ArrayBuffer(bytes.length);\n\t            let ia = new Uint8Array(ab);\n\t            for (var i = 0; i < bytes.length; i++) {\n\t                ia[i] = bytes.charCodeAt(i);\n\t            }\n\t            return new Blob([ab], { type: \'image/png\' });\n\t        }, \n\t\t\tcut:function(){\n\t\t\t\tthis.$refs.cropper.getCropData((data) => { \n\n\n\t\t\t\t\tthis.$postWithFile(\'/system/base64UploadFile\',{file:data.replace(\'data:image/png;base64,\',\'\')}).then(({code,obj})=>{\n\n\t\t\t\t\t\tif(code == \'00\'){\n\t\t\t\t\t\t\tthis.$message({\n\t\t\t\t\t\t\t\tmessage:\'上传成功！\',\n\t\t\t\t\t\t\t\ttype:\'success\'\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tthis.close(obj);\n\n\t\t\t\t\t\t\t// this.callBack && this.callBack(obj)\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t})\n\n\t\t\t\t})\n\n\t\t\t}\n\t\t\t \n\t\t},\n\t\tmounted(){\n\n\t\t},\n\t\tcreated(){\n\n\t\t},\n\t\tcomputed:{\n\n\t\t},\n\t\twatch:{\n\t\t\tisShow:{\n\t\t\t\thandler:function(v){ \n\t\t\t\t\tthis.option = {\n\t\t\t\t\t\t\t\t...this.option,\n\t\t\t\t\t\t\t\t...{img:this.imgUrl}\n\t\t\t\t\t\t\t}\n\t\t\t\t\tthis.show = v;\n\t\t\t\t},\n\t\t\t\timmediate:true\n\n\t\t\t}\n\n\t\t}\n\t}\n\n<\/script>\n<style scoped>\n\n</style>\n')])])]),n("backTop")],1)}),[],!1,null,null,null);n.default=i.exports}}]);