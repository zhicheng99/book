(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{385:function(t,n,i){"use strict";i.r(n);var e=i(10),s=Object(e.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h1",{attrs:{id:"git-常见操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#git-常见操作"}},[this._v("#")]),this._v(" Git 常见操作")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("\ngit checkout -b dev  创建本地分支并切换到该分支\n\ngit checkout dev 切换分支\n\ngit branch 查看本地分支\ngit branch -r 查看远程分支\n\n\ngit merge dev  合并指定分支到当前分支\n\ngit branch -d dev 删除指定分支\n\n\ngit push origin 本地分支名:远程分支名  本地分支push到远程分支（创建远程分支）\n\n\ngit push origin :远程分支名  删除远程分支（推送一个空的分支到远程  相当于删除）\n\n\n$ git push origin --delete 删除远程分支\n\ngit remote add originname2 https://origin2.com/project.git\n\n\n\n如果只是简单的将A_branch分支的文件f.txt copy到B_branch分支上；  \ngit checkout B_branch\ngit checkout A_bracn  f.txt\n\n\n\ngit push  (remote名)  (本地分支名:远程分支名)\ngit pull  (remote名) （远程分支名:本地分支名）\n\ngit log --oneline --pretty=format:\"%cd-%cn-%cr-%s\"  --since=2019-05-20 --until=2019-05-24 --author='qq123'\n\n\ngit stash save  ‘暂存’\ngit stash pop\ngit stash list\ngit stash clear\n\ngit reset --hard commitId //不可逆恢复\ngit checkout commitId //创建以某一次commitId为分支并切换到该分支 只是临时的 可以查看当前的文件修改状态 当切换到别的分支时，该分支就没有了（自动收回）\ngit checkout commitId -b 'A' //创建指定commitId的新分支\n\ngit branch --set-upstream-to=origin/<branch> phase_2\n将phase_2分支追踪远程分支origin/<branch>\n\ngit reset --soft HEAD^ //撤销这次的commit\n\nclone某一分支到本地\ngit clone -b v2.8.1 https://git.oschina.net/oschina/android-app.git\n\ngit remote set-url** 来调整你的url\n$ git remote set-url origin git@github.com:someaccount/someproject.git\n\n")])])]),n("backTop")],1)}),[],!1,null,null,null);n.default=s.exports}}]);