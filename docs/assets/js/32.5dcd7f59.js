(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{312:function(t,n,s){"use strict";s.r(n);var a=s(10),p=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"聊聊canvas的元素选中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#聊聊canvas的元素选中"}},[t._v("#")]),t._v(" 聊聊canvas的元素选中")]),t._v(" "),s("p",[t._v("原创： 蜀中亮子 玄说前端  "),s("em",[t._v("4天前")])]),t._v(" "),s("p",[t._v("起因")]),t._v(" "),s("p",[t._v("首先上图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"Public/upload/20201027/16037924997.jpg",alt:""}})]),t._v(" "),s("p",[t._v("今天，我们前端群问了一个这样的问题，然后就开始了激烈的讨论。\n那么下面咱们一起来看看这个问题，这个问题问了两个小问题：\n1.如何在 canvas 上绘制多边形?\n2.鼠标怎么选中绘制的某一个图形？\n那么咱们就来分为两个问题解答。\n绘制多边形\n要绘制一个多边形，多边形图形的基本元素是路径。路径是通过不同颜色和宽度的线段或曲线相连形成的不同形状的点的集合。一个路径，甚至一个子路径，都是闭合的。使用路径绘制图形需要一些额外的步骤。")]),t._v(" "),s("ul",[s("li",[t._v("首先，你需要创建路径起始点")]),t._v(" "),s("li",[t._v("然后你使用画图命令去画出路径。")]),t._v(" "),s("li",[t._v("之后你把路径封闭")]),t._v(" "),s("li",[t._v("一旦路径生成，你就能通过描边或填充路径区域来渲染图形。以上这些步骤会用到一些 API:")])]),t._v(" "),s("p",[t._v("beginPath()\n新建一条路径，生成之后，图形绘制命令被指向到路径上生成路径。\nclosePath()\n闭合路径之后图形绘制命令又重新指向到上下文中。\nstroke()\n通过线条来绘制图形轮廓。\nfill()\n通过填充路径的内容区域生成实心的图形。\n详解绘制过程\n这里详细解答一下绘制的过程：\n第一步，生成路径，调用 beginPath，本质上路径是有很多子路径所构成的，这些子路径全部在一个列表里面，所有的子路径（线、弧）构成图形。而每次调用这个方法之后，列表都会被重置，然后就可以绘制新的图形。(你需要在设置路径之后指定你的起始位置)；\n第二步，调用指定函数绘制路径；\n第三步，闭合路劲 closePath(不是必须的)；\n笔式绘图仪模型\n绘制一个三角形例子：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ctx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" canvas"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2d"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beginPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//开始路径")]),t._v("\nctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("moveTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("75")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//指定起始位置")]),t._v("\nctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lineTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("75")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//绘制到这个位置的一条线")]),t._v("\nctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lineTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//绘制到这个位置的一条线")]),t._v("\nctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//填充图形，默认就制动结束路径了")]),t._v("\n")])])]),s("p",[t._v("在这个过程中，有一个比较有用的函数，moveTo,这个函数实际上画不出来任何东西，它是属于上面描述的路劲列表的一部分。\n看下这个函数的作用：\nmoveTo()\n将笔触移动到指定的坐标 x 以及 y 上。\n当 canvas 初始化或者 beginPath()调用后，你通常会使用 moveTo()函数设置起点。我们也能够使用 moveTo()绘制一些不连续的路径。\n这个时候你可以想象一下在纸上画东西，笔尖从一个点到另一个点的移动过程。这个过程的模式叫做"),s("strong",[t._v("笔式绘图仪模式")]),t._v("。所以 canvas 2d 绘图的模式也就是这种模式。\n现在绘制多边形就没有什么问题了。\ncanvas 上找出指定的图形\n首先，完成描述一下这个问题：按下鼠标，如何判断出选中了某一个图形？\n比如下图：\n"),s("img",{attrs:{src:"Public/upload/20201027/16037925033.jpg",alt:""}})]),t._v(" "),s("p",[t._v("鼠标点击了这个不规则多边形的内部，怎么判断？\n第一反应就是 isPointInPath，或者是迭代所有图形，拿鼠标的点去与图形的点碰撞检测，这个方法可以用，但是适用场景比较少，还有就是性能开销比较大，如果图形太多，每一个都需要经过计算，那么这个交互会变得非常的不友好。\n有没有其他方案了，在游戏界有一个普遍使用的方案——包围盒，什么是包围盒呢？我们以上面的图形举例，外面画的红线框就是这个多边形的包围盒。\n很形象的一个例，就是公司发的月饼盒子，就是里面圆圆的月饼   的包围盒。")]),t._v(" "),s("p",[t._v("包围盒的方案有个缺点，选取的范围比较粗。比如上图的红框，框选了不是多边形部分的内容。如果你想用包围盒的方案来做，那就要分的足够细，比如下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"Public/upload/20201027/16037930584.jpg",alt:""}})]),t._v(" "),s("p",[t._v("分出来了多个包围盒，这种情况在图形特别复杂的时候，包围盒这个方案就有点粗糙了。\n还有下图这种，实心和空心圆，用包围盒也就非常的不友好。\n"),s("img",{attrs:{src:"Public/upload/20201027/16037925043.jpg",alt:""}})]),t._v(" "),s("p",[t._v("那怎么办？\n方案\n如果想要快速选中某一个图形，我们能不能对我们的每一个图形有一个对应的 hash，而在鼠标点击的时候，又能够取到这个 hash。用 hash 的值，去找这个图形,这个过程的时间复杂度是 O(1)。\n比如在画布的这些图形：\n"),s("img",{attrs:{src:"Public/upload/20201027/16037925048.jpg",alt:""}})]),t._v(" "),s("p",[t._v("在另一张一模一样的画布上，画了这些图形\n"),s("img",{attrs:{src:"Public/upload/20201027/16037925045.jpg",alt:""}})]),t._v(" "),s("p",[t._v("上层画布（显示出来的）是正常的图形，但是每个图形分配一个 rgb 色值。\n下层画布（隐藏）用这个 rgb 色值做填充或者 stroke。\n当鼠标点击的时候，在隐藏画布相同的位置，取一个像素点。\n而这个像素点的rgb值就是我们要找的 hash。")]),t._v(" "),s("p",[t._v("文章来源：https://zhuanlan.zhihu.com/p/82730156")]),t._v(" "),s("backTop")],1)}),[],!1,null,null,null);n.default=p.exports}}]);