(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{419:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"核心概念-一文说透js中的原型和继承-上"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心概念-一文说透js中的原型和继承-上"}},[t._v("#")]),t._v(" [核心概念] 一文说透JS中的原型和继承(上)")]),t._v(" "),a("h2",{attrs:{id:"系列开篇"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系列开篇"}},[t._v("#")]),t._v(" 系列开篇")]),t._v(" "),a("blockquote",[a("p",[t._v("为进入前端的你建立"),a("strong",[t._v("清晰、准确、必要")]),t._v("的"),a("strong",[t._v("概念")]),t._v("和这些概念的之间"),a("strong",[t._v("清晰、准确、必要")]),t._v("的"),a("strong",[t._v("关联")]),t._v(", 让你不管在什么面试中都能淡定从容。没有目录，而是通过概念关联形成了一张知识网络，往下看你就明白了。当你遇到【关联概念】时，可先从括号中的(强/弱)判断简单这个关联是对你正在理解的概念是强相关(得先理解你才能继续往下)还是弱相关(知识拓展)从而提高你的阅读效率。我也会定期更新相关关联概念。")])]),t._v(" "),a("h3",{attrs:{id:"面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试题"}},[t._v("#")]),t._v(" 面试题")]),t._v(" "),a("ul",[a("li",[t._v("什么是原型，原型链")]),t._v(" "),a("li",[t._v("js中是如何实现继承关系的（基于原型链的继承）")]),t._v(" "),a("li",[a("code",[t._v("[[Prototype]] 、__proto__ 、 prototype属性、constructor")]),t._v(" 等等都是干啥的")]),t._v(" "),a("li",[t._v("我们平时能用这些个知识做些什么事")]),t._v(" "),a("li",[t._v("js 的面向对象思想")])]),t._v(" "),a("h1",{attrs:{id:"这是干什么的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#这是干什么的"}},[t._v("#")]),t._v(" 这是干什么的？")]),t._v(" "),a("p",[t._v("我们先给个MDN上的定义，帮助我们初步了解这些概念，以及这些概念的关联。")]),t._v(" "),a("blockquote",[a("p",[t._v("MDN: JavaScript 常被描述为一种"),a("strong",[t._v("基于原型的语言")]),t._v(" ("),a("code",[t._v("prototype-based language")]),t._v(")——每个对象拥有一个"),a("strong",[t._v("原型对象")]),t._v("，"),a("strong",[t._v("对象以其原型为 "),a("code",[t._v("模板")]),t._v("、从原型 "),a("code",[t._v("继承方法和属性")])]),t._v("。原型对象也可能拥有原型，并从中继承方法和属性，一层一层、以此类推。这种关系常被称为"),a("strong",[t._v("原型链")]),t._v(" ("),a("code",[t._v("prototype chain")]),t._v(")，它解释了 "),a("code",[t._v("为何一个对象会拥有定义在其他对象中的属性和方法")]),t._v("。")])]),t._v(" "),a("p",[t._v("在传统的面向对象编程 (OOP) 中，首先定义“"),a("strong",[t._v("类")]),t._v("” (Class)，此后创建对象实例时，类中定义的所有属性和方法都被"),a("strong",[t._v("复制到实例")]),t._v("中。在 JavaScript 中"),a("strong",[t._v("并不如此复制")]),t._v("——而是在对象实例和它的构造器之间建立一个链接（它是 "),a("code",[t._v("__proto__")]),t._v("属性，是从构造函数的prototype属性派生的），之后通过"),a("strong",[t._v("上溯原型链")]),t._v("，在"),a("strong",[t._v("构造器中找到这些属性和方法")]),t._v("。")]),t._v(" "),a("p",[t._v("ok 我们现在先留下一个大致印象。模糊的了解了什么是"),a("strong",[t._v("原型和原型链")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"原型继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型继承"}},[t._v("#")]),t._v(" 原型继承")]),t._v(" "),a("p",[t._v("在编程中，我们经常会想获取并"),a("strong",[t._v("扩展")]),t._v("一些东西，这非常常见，比如你有 "),a("code",[t._v("people")]),t._v(" 这个对象及其属性和方法，并希望将 "),a("code",[t._v("student")]),t._v(" 和 "),a("code",[t._v("worker")]),t._v(" 作为基于 "),a("code",[t._v("people")]),t._v(" "),a("strong",[t._v("稍加修改的变体")]),t._v("。我们想 "),a("code",[t._v("重用")]),t._v(" "),a("code",[t._v("people")]),t._v(" 中的内容，"),a("strong",[t._v("而不是复制/重新实现")]),t._v("它的方法，而只是在其之上构建一个新的对象。"),a("strong",[t._v("原型继承")]),t._v("（Prototypal inheritance） 这个语言特性能够帮助我们实现这一需求。")]),t._v(" "),a("h3",{attrs:{id:"prototype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prototype"}},[t._v("#")]),t._v(" "),a("code",[t._v("[[Prototype]]")])]),t._v(" "),a("p",[t._v("在 JavaScript 中，对象有一个特殊的"),a("strong",[t._v("隐藏属性")]),t._v(" "),a("code",[t._v("[[Prototype]]")]),t._v("，它要么为 "),a("code",[t._v("null")]),t._v("，要么就是 "),a("code",[t._v("对另一个对象的引用")]),t._v("。该对象被称为“"),a("strong",[t._v("原型")]),t._v("”, 也可以理解为这个属性是"),a("strong",[t._v("指向原型对象的指针")]),t._v("。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3084262f1e8e4fdcb1588a2418fd45d7~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp",alt:""}})]),t._v(" "),a("p",[t._v("就像这样，当我们从 object 中读取一个"),a("strong",[t._v("缺失")]),t._v("的属性时，JavaScript 会自动从"),a("strong",[t._v("原型对象")]),t._v("中获取该属性。")]),t._v(" "),a("h3",{attrs:{id:"proto"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proto"}},[t._v("#")]),t._v(" "),a("code",[t._v("__proto__")])]),t._v(" "),a("p",[t._v("我们可以用 "),a("code",[t._v("__proto__")]),t._v("来设置 "),a("code",[t._v("[[Prototype]]")]),t._v("这个隐藏属性。不过现在有新的访问方式。\n"),a("code",[t._v("__proto__")]),t._v(" 是 "),a("code",[t._v("[[Prototype]]")]),t._v("属性由于历史原因而留下来的 "),a("code",[t._v("getter/setter")]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[t._v("MDN: 遵循ECMAScript标准，"),a("code",[t._v("someObject.[[Prototype]]")]),t._v(" 符号是用于指向 someObject 的原型。从 ECMAScript 6 开始，"),a("code",[t._v("[[Prototype]]")]),t._v(" 可以通过 "),a("code",[t._v("Object.getPrototypeOf()")]),t._v(" 和 "),a("code",[t._v("Object.setPrototypeOf()")]),t._v(" 访问器来访问。这个等同于 JavaScript 的非标准但许多浏览器实现的属性 "),a("code",[t._v("__proto__")]),t._v("。")])]),t._v(" "),a("p",[t._v("首先明确这不是一个东西。再强调 "),a("code",[t._v("__proto__")]),t._v(" 是 "),a("code",[t._v("[[Prototype]]")]),t._v(" 的 "),a("code",[t._v("getter/setter")]),t._v("。\n但由于 "),a("code",[t._v("__proto__")]),t._v(" 标记在观感上更加明显，所以我们在下面的示例中将使用它。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" animal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("eats")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" rabbit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("jumps")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置 rabbit.[[Prototype]] = animal")]),t._v("\nrabbit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n复制代码\n")])])]),a("p",[a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/93853c07481e473295b2fe6facfd5e7c~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp",alt:""}})]),t._v(" "),a("p",[t._v("可以说 "),a("code",[t._v("animal")]),t._v(" 是 "),a("code",[t._v("rabbit")]),t._v(" 的 "),a("code",[t._v("原型")]),t._v("，或者说 "),a("code",[t._v("rabbit")]),t._v(" 的 "),a("code",[t._v("原型")]),t._v("是从 "),a("code",[t._v("animal")]),t._v(" "),a("code",[t._v("继承")]),t._v("而来的。")]),t._v(" "),a("p",[t._v("现在，如果我们从 rabbit 中读取一个它没有的属性，JavaScript 会自动从 animal 中获取。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" rabbit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eats "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n复制代码\n")])])]),a("p",[t._v("当 alert 试图读取 "),a("code",[t._v("rabbit.eats")]),t._v(" 时，因为它"),a("strong",[t._v("不存在于 rabbit 中")]),t._v("，所以 JavaScript 会顺着 "),a("code",[t._v("[[Prototype]]")]),t._v(" 引用，在 "),a("code",[t._v("animal")]),t._v(" 中查找（自下而上）")]),t._v(" "),a("p",[t._v("因此，如果 "),a("code",[t._v("animal")]),t._v(" 中有许多"),a("strong",[t._v("有用的属性和方法")]),t._v("，那么它们将"),a("strong",[t._v("自动地变为在 "),a("code",[t._v("rabbit")]),t._v(" 中可用")]),t._v("。这种属性被称为“"),a("strong",[t._v("继承")]),t._v("”。")]),t._v(" "),a("p",[t._v("例如如果我们在 animal 中有一个"),a("strong",[t._v("方法")]),t._v("，它也可以在 rabbit 中被调用：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" animal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("eats")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("walk")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Animal walk"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" rabbit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("jumps")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("__proto__")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" animal\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// walk 方法是从原型中获得的")]),t._v("\nrabbit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("walk")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Animal walk")]),t._v("\n复制代码\n")])])]),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0624329b767a430ba5a4f3f55c25b0bd~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp",alt:""}})]),t._v(" "),a("p",[t._v("原型链可以很长，原型还能有原型，但"),a("strong",[t._v("不能有闭环")]),t._v("，如果我们试图在一个闭环中分配 "),a("code",[t._v("__proto__")]),t._v("，JavaScript 会抛出错误。并且只能有一个 "),a("code",[t._v("[[Prototype]]")]),t._v("。一个对象"),a("strong",[t._v("不能从其他两个对象")]),t._v("获得继承。这跟OOP的"),a("strong",[t._v("多重继承")]),t._v(" [核心概念] 不同 。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/816a968e901d46ae8402f3730ad5c5f3~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp",alt:""}})]),t._v(" "),a("p",[t._v("现在我们对原型和原型链有了更进一步的认识。当"),a("strong",[t._v("读取实例的属性")]),t._v("时，如果找不到，就会查找与 "),a("code",[t._v("对象关联的原型")]),a("strong",[t._v("中的属性")]),t._v("，如果还查不到，就"),a("strong",[t._v("去找原型的原型")]),t._v("，一直"),a("strong",[t._v("找到最顶层为止")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"f-prototype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#f-prototype"}},[t._v("#")]),t._v(" F.prototype")]),t._v(" "),a("p",[t._v("我们现在知道，一个对象可能是另一个对象的原型，那么平时我们如何创建对象的?")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字面量，没毛病")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// new 关键字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 又或者 Object.create 等等")]),t._v("\n复制代码\n")])])]),a("p",[t._v("我们来讨论下 "),a("code",[t._v("new F")]),t._v(" 这样的用"),a("strong",[t._v("构造函数")]),t._v("来创建一个新对象。")]),t._v(" "),a("p",[t._v("如果 "),a("code",[t._v("F.prototype")]),t._v(" 是一个对象，那么 "),a("code",[t._v("new")]),t._v(" 操作符会"),a("strong",[t._v("使用它为新对象设置")]),t._v(" "),a("code",[t._v("[[Prototype]]")]),t._v("。")]),t._v(" "),a("p",[t._v("也就是说，"),a("code",[t._v("F.prototype")]),t._v(" 这个属性指向的是一个对象(假设是A)，那么 用 "),a("code",[t._v("let b = new F()")]),t._v(" 创建的实例(b)的 "),a("code",[t._v("[[Prototype]]")]),t._v(" 就指向这个对象(A)，也就是作为这个新实例的"),a("strong",[t._v("原型对象")]),t._v("(A)")]),t._v(" "),a("p",[t._v("注意，这里的 "),a("code",[t._v("F.prototype")]),t._v(" 指的是 "),a("code",[t._v("F")]),t._v(' 的一个名为 "prototype" 的'),a("strong",[t._v("常规属性")]),t._v("。")]),t._v(" "),a("p",[t._v("看个具体例子")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" animal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("eats")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Rabbit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造函数的 prototype 属性设置为 animal")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rabbit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" rabbit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rabbit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"White Rabbit"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  rabbit.__proto__ == animal")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" rabbit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eats "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n复制代码\n")])])]),a("p",[t._v("设置 "),a("code",[t._v("Rabbit.prototype = animal")]),t._v(" 的字面意思是：“当创建了一个 "),a("code",[t._v("new Rabbit")]),t._v(" 时，把它的 "),a("code",[t._v("[[Prototype]]")]),t._v(" 赋值为 "),a("code",[t._v("animal")]),t._v("”。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1f17cea8c8c4479092973743ca796846~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp",alt:"image.png"}})]),t._v(" "),a("p",[t._v('在上图中，"prototype" 是一个水平箭头，表示一个'),a("strong",[t._v("常规属性")]),t._v("，"),a("code",[t._v("[[Prototype]]")]),t._v(" 是垂直的，表示 "),a("code",[t._v("rabbit")]),t._v(" "),a("strong",[t._v("继承")]),t._v("自 "),a("code",[t._v("animal")]),t._v(", 或者说 "),a("code",[t._v("animal")]),t._v(" 是 "),a("code",[t._v("rabbit")]),t._v(" 的"),a("strong",[t._v("原型")]),t._v("。")]),t._v(" "),a("p",[t._v("所以结论是："),a("code",[t._v("F.prototype")]),t._v(" "),a("strong",[t._v("属性仅在 "),a("code",[t._v("new F")]),t._v(" 被调用时使用")]),t._v("，它为"),a("strong",[t._v("新对象")]),t._v("的 "),a("code",[t._v("[[Prototype]]")]),t._v(" "),a("strong",[t._v("赋值")]),t._v("。")]),t._v(" "),a("p",[t._v("另外 "),a("code",[t._v("F.prototype")]),t._v(" 的值要么是一个"),a("strong",[t._v("对象")]),t._v("，要么就是 "),a("strong",[t._v("null")]),t._v("："),a("strong",[t._v("其他值都不起作用")]),t._v("。")]),t._v(" "),a("p",[t._v("但我们平时貌似没手动给 "),a("code",[t._v("new F")]),t._v("加过 "),a("code",[t._v("prototype")]),t._v(" 这个属性啊，因为 js 给我们加了个默认选项，也就是 "),a("strong",[t._v("默认的 F.prototype")]),t._v("，"),a("strong",[t._v("构造器属性")])]),t._v(" "),a("p",[t._v("每个 "),a("code",[t._v("函数")]),t._v("都有 "),a("code",[t._v('"prototype"')]),t._v(" 属性，即使我们没有提供它。")]),t._v(" "),a("p",[t._v("默认的 "),a("code",[t._v('"prototype"')]),t._v(" 是一个"),a("strong",[t._v("只有属性")]),t._v(" "),a("code",[t._v("constructor")]),t._v(" "),a("strong",[t._v("的对象")]),t._v("，属性 constructor "),a("strong",[t._v("指向函数自身")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Rabbit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* default prototype\nRabbit.prototype = { constructor: Rabbit };\n*/")]),t._v("\n复制代码\n")])])]),a("p",[a("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/14e7a0bc7af54b03a34b3c4da41df712~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp",alt:"image.png"}})]),t._v(" "),a("p",[t._v("我们可以检查一下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Rabbit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// by default:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Rabbit.prototype = { constructor: Rabbit }")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rabbit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" Rabbit "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 而且 constructor 属性可以通过 [[Prototype]] 给所有实例 rabbits 使用：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" rabbit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rabbit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// inherits from {constructor: Rabbit}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rabbit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" Rabbit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true (from prototype)")]),t._v("\n复制代码\n")])])]),a("p",[a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9564cd0d145249c791b1f41efba0c70f~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp",alt:"image.png"}})]),t._v(" "),a("p",[t._v("所以我们可以使用 "),a("code",[t._v("constructor")]),t._v(" 属性来"),a("strong",[t._v("创建一个新对象")]),t._v("，该对象使用与现有对象相同的构造器。类似 "),a("code",[t._v("new rabbit.constructor();")]),t._v(" 这样。")]),t._v(" "),a("p",[t._v("这里有个点一定要注意："),a("strong",[t._v('JavaScript 自身并不能确保正确的 "constructor" 函数值')]),t._v('。如果我们将整个默认 prototype 替换掉，那么其中就不会有 "constructor" 了。')]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Rabbit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rabbit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("jumps")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" rabbit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rabbit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rabbit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Rabbit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n复制代码\n")])])]),a("p",[t._v("所以在操作原型对象时，"),a("strong",[t._v("切忌直接替换")]),t._v('，我们可以选择添加/删除属性到默认 "prototype"。')]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Rabbit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不要将 Rabbit.prototype 整个覆盖")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以向其中添加内容")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rabbit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jumps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认的 Rabbit.prototype.constructor 被保留了下来")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者，也可以手动重新创建 constructor 属性")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rabbit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("jumps")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Rabbit\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这样的 constructor 也是正确的，因为我们手动添加了它")]),t._v("\n复制代码\n")])])]),a("h2",{attrs:{id:"原生的原型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原生的原型"}},[t._v("#")]),t._v(" 原生的原型")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("prototype")])]),t._v(" 属性在 JavaScript 自身的核心部分中被广泛地应用。"),a("strong",[t._v("所有的内置构造函数")]),t._v("都用到了它。")]),t._v(" "),a("h3",{attrs:{id:"object-prototype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype"}},[t._v("#")]),t._v(" Object.prototype")]),t._v(" "),a("p",[t._v("假如我们输出一个空对象：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Object]"')]),t._v("\n复制代码\n")])])]),a("p",[t._v("生成字符串 "),a("code",[t._v('"[object Object]"')]),t._v(" 的代码在哪里？")]),t._v(" "),a("p",[a("code",[t._v("obj = {}")]),t._v(" 和 "),a("code",[t._v("obj = new Object()")]),t._v(" 是一个意思，其中 Object 就是一个"),a("strong",[t._v("内建的对象构造函数")]),t._v("，其自身的 "),a("code",[t._v("prototype")]),t._v(" 指向一个带有 toString 和其他方法的一个巨大的对象。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f9da4f0542f840938fc0f7217151111b~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp",alt:"image.png"}})]),t._v(" "),a("p",[t._v("所以, 当 "),a("code",[t._v("obj.toString()")]),t._v(" 被调用时，这个方法是从 "),a("code",[t._v("Object.prototype")]),t._v(" 中获取的。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请注意在 Object.prototype 上方的链中没有更多的 [[Prototype]]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n复制代码\n")])])]),a("p",[t._v("其他内建对象，像 "),a("code",[t._v("Array、Date、Function 及其他")]),t._v("，都在 "),a("code",[t._v("prototype")]),t._v(" 上挂载了方法。我们看个完整点的")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bdd28b17ab1e4f71a887f3e7acaca6a2~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"基本数据类型的特殊性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型的特殊性"}},[t._v("#")]),t._v(" 基本数据类型的特殊性")]),t._v(" "),a("p",[t._v("我们看个例子")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["1", "2", "3"]')]),t._v("\n复制代码\n")])])]),a("p",[a("code",[t._v('"123"')]),t._v(" 不是个字符串基本类型吗，并不是对象，为什么能调用 "),a("code",[t._v("split")]),t._v(" 方法?")]),t._v(" "),a("p",[t._v("答案是 "),a("strong",[t._v("临时包装器对象")])]),t._v(" "),a("p",[a("code",[t._v("字符串")]),t._v("、"),a("code",[t._v("数字")]),t._v("和 "),a("code",[t._v("布尔值")]),t._v("虽然是"),a("strong",[t._v("基本类型")]),t._v("但是如果我们试图访问它们的属性，那么"),a("strong",[t._v("临时包装器对象")]),t._v("将会通过"),a("strong",[t._v("内建的构造器")]),t._v(" "),a("code",[t._v("String、Number 和 Boolean 被创建")]),t._v("。那么这些方法存储在包装器对象的 prototype 中："),a("code",[t._v("String.prototype、Number.prototype 和 Boolean.prototype")]),t._v("。它们提供给我们操作字符串、数字和布尔值的方法"),a("strong",[t._v("然后消失")]),t._v("。")]),t._v(" "),a("p",[t._v("注意原始数据类型只有 "),a("code",[t._v("undefined 和 null")]),t._v(" "),a("strong",[t._v("没有包装器对象")]),t._v("。所以它们"),a("strong",[t._v("没有方法和属性")]),t._v("。并且它们"),a("strong",[t._v("也没有相应的原型")]),t._v("。")]),t._v(" "),a("p",[t._v("另外内建原型"),a("strong",[t._v("可以被修改")]),t._v("或被用新的方法填充。但是"),a("strong",[t._v("不建议更改它们")]),t._v("。")]),t._v(" "),a("h1",{attrs:{id:"原型链图解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型链图解析"}},[t._v("#")]),t._v(" 原型链图解析")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b9ef7b70f27947198146c4ad58b18f06~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp",alt:"image.png"}})]),t._v(" "),a("p",[t._v("现在理解原型相关概念后，我们来看下这个图，简单分三部分")]),t._v(" "),a("ul",[a("li",[t._v("上面绿色箭头相关部分")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Foo 是个构造方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// f1 f2 是 Foo 这个构造函数 创建的对象实例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" f1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" f2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 它们的 [[Prototype]] 或者说 __proto__ 指向 Foo.prototype 这个原型对象")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认的 prototype 是一个只有属性constructor 的对象，属性 constructor 指向函数自身。")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n复制代码\n")])])]),a("ul",[a("li",[t._v("中间蓝色箭头相关部分")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// o1 o2 是普通对象创建方式可以这样，实际一个效果")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" o1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" o2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 其中 Object 就是一个 内建的对象构造函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 其自身的 prototype 指向一个带有 toString 和其他方法的一个巨大的对象。")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  类似的 他们的原型 就是 Object.prototype")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Object.prototype 上方的链中没有更多的 [[Prototype]]")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原型对象的 constructor 属性还是指向构造函数自身。")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("__proto__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n复制代码\n")])])]),a("ul",[a("li",[t._v("下方红色箭头相关部分")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只要是个函数 他的__proto__都是指向 Function.prototype")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以理解为函数是 new Function() 出来的对象实例")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Function"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n复制代码\n")])])]),a("p",[t._v("相信这张图，你现在看起来会觉得异常清晰。")]),t._v(" "),a("p",[t._v("另外面试中常考的相关手写方案请看这篇 前端面试必刷手写题系列[4]，是关于 "),a("code",[t._v("instanceof")]),t._v("和 "),a("code",[t._v("new 关键字")]),t._v(" 的"),a("strong",[t._v("手写实现")]),t._v("。")]),t._v(" "),a("p",[t._v("理解原型之后，我们下篇再说"),a("strong",[t._v("Javascript中的继承")]),t._v("[核心概念]")]),t._v(" "),a("hr"),t._v(" "),a("blockquote",[a("p",[t._v("继续下去，你总会有收获。\n上面这句话给你们，同样也给我自己前进的动力。")])]),t._v(" "),a("p",[t._v("我是摩尔，数学专业，做过互联网研发，测试，产品")]),t._v(" "),a("p",[t._v("致力用技术改变别人的生活，用梦想改变自己的生活")]),t._v(" "),a("p",[t._v("关注我，找到自己的互联网思路，踏实地打牢固自己的技术体系")]),t._v(" "),a("p",[a("code",[t._v("点赞、关注、评论、谢谢")])]),t._v(" "),a("p",[t._v("有问题求助可私信 "),a("strong",[t._v("1602111431@qq.com")]),t._v(" 我会尽可能帮助你，也可以"),a("strong",[t._v("交个朋友")])]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[t._v("You don't know Javascript 上卷")]),t._v(" "),a("li",[t._v("zh.javascript.info/prototype-i…")]),t._v(" "),a("li",[t._v("developer.mozilla.org/zh-CN/docs/…")])]),t._v(" "),a("p",[t._v(".markdown-body pre,.markdown-body pre>code.hljs{color:#333;background:#f8f8f8}.hljs-comment,.hljs-quote{color:#998;font-style:italic}.hljs-keyword,.hljs-selector-tag,.hljs-subst{color:#333;font-weight:700}.hljs-literal,.hljs-number,.hljs-tag .hljs-attr,.hljs-template-variable,.hljs-variable{color:teal}.hljs-doctag,.hljs-string{color:#d14}.hljs-section,.hljs-selector-id,.hljs-title{color:#900;font-weight:700}.hljs-subst{font-weight:400}.hljs-class .hljs-title,.hljs-type{color:#458;font-weight:700}.hljs-attribute,.hljs-name,.hljs-tag{color:navy;font-weight:400}.hljs-link,.hljs-regexp{color:#009926}.hljs-bullet,.hljs-symbol{color:#990073}.hljs-built_in,.hljs-builtin-name{color:#0086b3}.hljs-meta{color:#999;font-weight:700}.hljs-deletion{background:#fdd}.hljs-addition{background:#dfd}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:700}\n文章来源：https://juejin.cn/post/6963251911046725669")]),t._v(" "),a("backTop")],1)}),[],!1,null,null,null);s.default=e.exports}}]);