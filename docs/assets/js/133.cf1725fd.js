(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{375:function(e,n,t){"use strict";t.r(n);var l=t(10),a=Object(l.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"el-dialog增加拖动功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#el-dialog增加拖动功能"}},[e._v("#")]),e._v(" el-dialog增加拖动功能")]),e._v(" "),t("p",[e._v("调用方式")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import dragDialog  from './directive/drag-dialog/drag-dialog.js'\n\nVue.directive('drag-dialog', dragDialog)\n\n//el-dialog增加v-drag-dialog指令即可\n")])])]),t("p",[e._v("drag-dialog.js")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("\nfunction addEvent(target, eventType, handle) {\n     if (target.addEventListener) { \n          target.addEventListener(eventType, handle, false); \n      } else { \n          target.attachEvent(\"on\" + eventType, function () {\n            handle.call(target, arguments);\n          }); \n      }\n};\nfunction removeEvent(target, eventType, handle) {\n    if (target.removeEventListener) {                   // // 所有浏览器，除了 IE 8 及更早IE版本\n        target.removeEventListener(eventType, handle,false);\n    } else if (target.detachEvent) {                   // IE 8 及更早IE版本\n        target.detachEvent(\"on\"+eventType, handle);\n    }\n}\n\nexport default {\n  bind(el) {\n\n    el.getElementsByClassName('el-dialog__header')[0].style.cursor = 'move';\n    addEvent(el.getElementsByClassName('el-dialog__header')[0],'mousedown',function(e) {\n      const elDialog = el.getElementsByClassName('el-dialog')[0];\n      const initClientX = e.clientX;\n      const initClientY = e.clientY;\n      const initStyleLeft = elDialog.style.left ? elDialog.style.left.replace('px','') - 0 : 0;\n      const initStyleTop = elDialog.style.top ? elDialog.style.top.replace('px','') - 0 : 0;\n\n      var f = function(e){\n          console.log(e);\n          const moveX = e.clientX - initClientX + initStyleLeft;\n          const moveY = e.clientY - initClientY + initStyleTop;\n          elDialog.style.left = moveX + \"px\";\n          elDialog.style.top = moveY + \"px\";\n        }\n  \n      addEvent(document,'mousemove',f)\n\n      addEvent(document,'mouseup',_=>{\n        removeEvent(document,'mousemove',f);\n      })\n\n      return false;\n    })\n\n  },\n  update(el, binding, vnode, old) {\n    // 实现每次打开 Dialog 都复位到中央\n    setTimeout(() => {\n      if (el.style.display === 'none') {\n        el.getElementsByClassName('el-dialog')[0].style.top = '';\n        el.getElementsByClassName('el-dialog')[0].style.left = '';\n      }\n    }, 333); // Dialog 的关闭动画用时 300 毫秒，因此这里需要延迟执行，而且要多延迟一点点\n  },\n}\n")])])]),t("backTop")],1)}),[],!1,null,null,null);n.default=a.exports}}]);