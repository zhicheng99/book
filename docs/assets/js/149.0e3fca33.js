(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{428:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"visual-studio-2010-创建的-wcf-dll-服务-第一个应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#visual-studio-2010-创建的-wcf-dll-服务-第一个应用"}},[t._v("#")]),t._v(" Visual Studio 2010 创建的 WCF（.dll） 服务 第一个应用")]),t._v(" "),a("p",[t._v("原文转载自：http://www.cnblogs.com/finehappy/archive/2009/12/20/1628385.html")]),t._v(" "),a("p",[t._v("在这个例子中我们将使用 VS 2010 U 创建一个 WCF 服务，其中会了解")]),t._v(" "),a("p",[t._v("[DataContract] [ServiceContract] 等特性。")]),t._v(" "),a("p"),t._v(" "),a("p",[t._v("内置的 WCFSVCHost ，并使用“WCF 测试客户端”来测试我们创建的服务。")]),t._v(" "),a("p",[t._v("注意下面的所有类、接口及方法都添加了 public 的访问级别。")]),t._v(" "),a("p"),t._v(" "),a("h2",{attrs:{id:"一-建立一个-wcf-服务库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-建立一个-wcf-服务库"}},[t._v("#")]),t._v(" "),a("strong",[t._v("一，建立一个 WCF 服务库")])]),t._v(" "),a("p",[t._v("创建一个 WCF 服务库项目，")]),t._v(" "),a("p",[a("img",{attrs:{src:"Public/upload/20200331/15856064068.jpg",alt:"2009-12-20_162938"}})]),t._v(" "),a("p",[t._v("在解决方案中会自动为我们生成两个类文件“IService.cs”和“Service.cs”。")]),t._v(" "),a("p",[t._v("这两个类文件是两个 WCF 示例文件，对我们开发没有什么用处，现在我们删掉这两个文件。")]),t._v(" "),a("p",[a("img",{attrs:{src:"Public/upload/20200331/15856064073.jpg",alt:"2009-12-20_171351"}})]),t._v(" "),a("p",[t._v("在弹出的“添加新项”窗口中，选择“类”，并在“名称”文本框中写入项名称“Person.cs”。")]),t._v(" "),a("p",[a("img",{attrs:{src:"Public/upload/20200331/15856064074.jpg",alt:"2009-12-20_171438"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"Public/upload/20200331/15856064078.jpg",alt:"2009-12-20_171457"}})]),t._v(" "),a("h2",{attrs:{id:"person-cs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#person-cs"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Person.cs")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Runtime.Serialization;\n\nnamespace WcfService\n{\n    /*******一旦声明一个类型为DataContract，\n     * 那么该类型就可以被序列化在服务端和客户端之间传送\n     * *******/\n    [DataContract]\n    public class Person\n    {\n        [DataMember]\n        public string Id { get; set; }\n\n        [DataMember]\n        public string Name { get; set; }\n\n        [DataMember]\n        public string Age { get; set; }\n    }\n}\n")])])]),a("p",[t._v("/// DataContract 数据约定，Person 就是传递的消息中的内容。好比信中的文字。    \n/// 为了保证此类在 WCF 调用中能够被序列化，我们在 Book 类上面加入[DataContract]标签，在每个需要序列化的成员变量上加入[DataMember]标签。    \n/// 这两个标签在使用的进候需要导入 using System.Runtime.Serialization 命名空间。由于注释又出现乱码，估计是字符版本的问题，下面是用黑体复制**")]),t._v(" "),a("p",[a("strong",[t._v("创建服务接口，声明对外发布的类和方法。")])]),t._v(" "),a("h2",{attrs:{id:"ipersonservice-cs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ipersonservice-cs"}},[t._v("#")]),t._v(" IPersonService.cs")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("using System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.ServiceModel;\n\nnamespace WcfService\n{\n    [ServiceContract]\n    public interface IPersonService\n    {\n        /***在每个需要对外发布的方法上都加上[OperationContract]标签，以使外部可以访问到此方法。 ***/\n        /// <summary> \n        /// ServiceContract：服务约定，代表我们所能操作的接口集合，提供功能点。 \n        /// 在IPersonService接口上面，我们定义了[ServiceContract]标签，此标签代表此接口及实现此接口的类都是对外发布的Service类， \n        /// 在每个需要对外发布的方法上都加上[OperationContract]标签，以使外部可以访问到此方法。 \n        /// [ServiceContract]和[OperationContract]这两个标签需要导入using System.ServiceModel命名空间。 \n        /// </summary> \n        [OperationContract]\n        void AddPerson(Person person);\n        [OperationContract]\n        List<Person> GetAllPersons();\n        [OperationContract]\n        void RemovePerson(string id); \n    }\n}\n")])])]),a("p"),t._v(" "),a("p",[a("strong",[t._v("实现我们上面声明的服务接口，实现对 Book 的添加、删除和检索的具体功能。")])]),t._v(" "),a("h2",{attrs:{id:"personservice-cs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#personservice-cs"}},[t._v("#")]),t._v(" "),a("strong",[t._v("PersonService.cs")])]),t._v(" "),a("div",{staticClass:"language-c# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.ServiceModel;\n\nnamespace WcfService\n{\n    /// <summary> \n    /// 此类是对IBookService接口的具体实现，在此类的上面我们声明了[ServiceBehavior(InstanceContextMode=InstanceContextMode.Single)]标签， \n    /// 此标签代表这个类采用SingleTone（单类模式）来生成对象。 \n    /// 使用[ServiceBehavior(InstanceContextMode=InstanceContextMode.Single)]接口需要导入using System.ServiceModel;命名空间。 \n    /// </summary> \n    [ServiceBehavior(InstanceContextMode = InstanceContextMode.Single)] //此类是单类模式\n    public class PersonService : IPersonService\n    {\n        List<Person> _Persons = new List<Person>();\n        public void AddPerson(Person person)\n        {\n            person.Id = Guid.NewGuid().ToString();\n            _Persons.Add(person);\n        }\n\n        public List<Person> GetAllPersons()\n        {\n            return _Persons;\n        }\n\n        public void RemovePerson(string id)\n        {\n            //拉姆达语句，谓词 p.Id == id \n            Person person = _Persons.Find(p => p.Id == id);\n            _Persons.Remove(person);\n        } \n\n    }\n}\n")])])]),a("p"),t._v(" "),a("p",[a("strong",[t._v("Ctrl + Shift + B 编译一下")])]),t._v(" "),a("h2",{attrs:{id:"二-配置服务运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-配置服务运行"}},[t._v("#")]),t._v(" "),a("strong",[t._v("二，配置服务运行")])]),t._v(" "),a("p",[t._v("到目前为至，我们建立好了 WCF 服务，那我们如何让 WCFSVCHost(WCF 服务主机)理解我们编写的服务类，并能够运行我们编写的服务呢。这需要我们在 App.Config 里面注册一下我们的 WCF 服务。")]),t._v(" "),a("p",[t._v("VS 为我们提供了可视化的操作界面。 "),a("strong",[t._v("在 Services 项目中右击“App.Config”配置文件，在弹出的右键菜单中选择“编辑 WCF 配置”。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"Public/upload/20200331/15856064074.jpg",alt:"2009-12-20_172922"}})]),t._v(" "),a("p",[t._v("打开之后如下图")]),t._v(" "),a("p",[t._v("在此界面中暴露两个对外的"),a("strong",[t._v("终结点")]),t._v("（外部可以访问到的类或接口），其中下面一个是"),a("strong",[t._v("元数据")]),t._v("终结点，用来向外提供服务信息的终结点。")]),t._v(" "),a("p",[t._v("而另一个（即上面的终结点），是向外公布我们编写的[ServiceContract]的类，但我们可以看到它的 Contract 还是我们在第一步中删掉的 WcfServiceLibrary1.IService1 这个终结点。")]),t._v(" "),a("p",[t._v("不仅如此，在右侧上面的黑字的服务中还依旧是我们在第一步中删除的 WcfServiceLibrary1.Service1 服务。这说明虽然在第一步中我们删除了那两个自动生成的类文件，但配置文件中仍没有删除这两个类文件的配置信息。")]),t._v(" "),a("p",[t._v("下面我们把它们改变一下。")]),t._v(" "),a("p",[t._v("单击左侧的“服务”-“WcfServiceLibrary1.Service1”在右侧的 Name，弹出“服务类型浏览器”对话框，在此类型中我们找到此 WCF 服务项目编译出来的 WcfServiceLibrary1.dll 文件，双击它就可以出现此服务中的对外公布的服务，点击选中它单击确定。")]),t._v(" "),a("p"),t._v(" "),a("p",[t._v("这样我们就可以把对外公司的服务改变为我们刚编写的服务了。 然后，我们展开左侧“服务”->“WcfServiceLibrary1.PersonService”->“终结点”，单击第一个“空名称”，从右边的“终结点属性”中的 Contract 中我们可以看到，这里的 Contract 仍然用的是 WcfServiceLibrary1.IService1。")]),t._v(" "),a("p",[a("img",{attrs:{src:"Public/upload/20200331/15856064080.jpg",alt:"2009-12-20_175045"}})]),t._v(" "),a("p",[t._v("我们按照上面的做法，"),a("strong",[t._v("找到此 WCF 服务项目编译出来的 WcfServiceLibrary1.dll")]),t._v("，双击它找到里面对应的 ServiceContract 点击确定就可以了。")]),t._v(" "),a("p",[a("img",{attrs:{src:"Public/upload/20200331/15856064097.jpg",alt:"2009-12-20_175127"}})]),t._v(" "),a("p",[t._v("在高级目录树中，为服务行为配置命名，名字你自己决定。")]),t._v(" "),a("p",[a("img",{attrs:{src:"Public/upload/20200331/15856064093.jpg",alt:"2009-12-20_182903"}})]),t._v(" "),a("p"),t._v(" "),a("p",[t._v("在服务中选中，刚才的行为配置。")]),t._v(" "),a("p",[a("img",{attrs:{src:"Public/upload/20200331/15856064092.jpg",alt:"2009-12-20_183005"}})]),t._v(" "),a("p"),t._v(" "),a("p",[a("strong",[t._v("重点一定要记着保存，点击菜单“文件”-“保存”就可以把我们对 App.Config 的修改保存回配置文件了。")])]),t._v(" "),a("h2",{attrs:{id:"app-config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#app-config"}},[t._v("#")]),t._v(" "),a("strong",[t._v("App.Config")])]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token prolog"}},[t._v('<?xml version="1.0" encoding="utf-8" ?>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("configuration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("system.web")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("compilation")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("debug")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("true"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("system.web")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("system.serviceModel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("service")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("behaviorConfiguration")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("Services.ServiceBehavior"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("WcfServiceLibrary1.PersonService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("endpoint")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("binding")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("wsHttpBinding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("contract")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("WcfServiceLibrary1.IPersonService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("identity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dns")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("identity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("endpoint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("endpoint")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("mex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("binding")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("mexHttpBinding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("contract")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("IMetadataExchange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("baseAddresses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("baseAddress")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://localhost:8732/Design_Time_Addresses/WcfServiceLibrary1/IPersonService/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("baseAddresses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("behaviors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("serviceBehaviors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("behavior")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("Services.ServiceBehavior"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("serviceMetadata")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("httpGetEnabled")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("true"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("serviceDebug")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("includeExceptionDetailInFaults")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("false"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("behavior")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("serviceBehaviors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("behaviors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("system.serviceModel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("configuration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h2",{attrs:{id:"三-测试-wcf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-测试-wcf"}},[t._v("#")]),t._v(" "),a("strong",[t._v("三，测试 WCF")])]),t._v(" "),a("p",[t._v("在 Visual Studio 中为我们提供了测试 WCF 的工具，按 F5 启动 WCF 会出现两个东西     一个是在右下角的托盘图标中会出现 WCFSVCHost(WCF 服务主机)，它为我们在开发时候提供了一个运行 WCF 的服务器，用来为测试客户端提供 WCF 服务。")]),t._v(" "),a("p",[a("img",{attrs:{src:"Public/upload/20200331/15856064098.jpg",alt:"2009-12-20_175711"}})]),t._v(" "),a("p",[t._v("另一个是“WCF 测试客户端”")]),t._v(" "),a("p",[t._v("“测试客户端”从 WcfSVCHost 中取得 WCF 服务的元数据，解析为左侧的“服务结构树”，从这里面我们可以看到此 WCF 服务为我们提供了一个服务契约“IPersonService”，此服务契约中对外提供了三个可调用的方法。")]),t._v(" "),a("p",[t._v("点击 AddPerson()  方法 输入参数 点击 Invoke 调用")]),t._v(" "),a("p",[a("img",{attrs:{src:"Public/upload/20200331/15856064108.jpg",alt:"2009-12-20_182116"}})]),t._v(" "),a("p",[t._v("点击 GetAllPersons() ，在 Response 中我们看到了返回的结果。")]),t._v(" "),a("p",[a("img",{attrs:{src:"Public/upload/20200331/15856064109.jpg",alt:"2009-12-20_182132"}})]),t._v(" "),a("p",[t._v("在本例中我们看到，WCF 作为面向对象和面向服务的桥梁 ，提供了非常方便的工具，无论是开发，配置还是测试，为我们可以快速的上手并提供面向服务的应用。你可以把 WCF 类库当作普通类库去做，但他提供了更强大的面向服务的特性。")]),t._v(" "),a("p",[t._v("WCF 的理论学习复杂程度远大于其的使用难度，而如果你是一名初学者，千万不要先陷入其复杂的理论学习中，花费很多的时间，而且看得晕头转向，最好先去实践，先去用，这样再去看 WCF 的深入概念和技术才会在大脑里面形成更好理解的印象和对应，这也是我一直在为初学者所传递的想法，不去学院派说理论，你认为呢。")]),t._v(" "),a("p"),t._v(" "),a("p",[t._v("源代码下载：WcfServiceLibrary1.rar")]),t._v(" "),a("p",[t._v("文章来源：https://www.cnblogs.com/wuhuisheng/archive/2013/01/30/2883382.html")]),t._v(" "),a("backTop")],1)}),[],!1,null,null,null);s.default=e.exports}}]);