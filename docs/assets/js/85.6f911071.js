(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{446:function(t,n,e){"use strict";e.r(n);var i=e(10),s=Object(i.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"允许批量上传图片组件-分块上传-带在线裁图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#允许批量上传图片组件-分块上传-带在线裁图"}},[t._v("#")]),t._v(" 允许批量上传图片组件（分块上传）（带在线裁图）")]),t._v(" "),e("p",[t._v("如果批量上传 会过滤掉不符合比例的 并提示\n如果是单张 会进行在线裁图")]),t._v(" "),e("p",[t._v("调用方法")]),t._v(" "),t.show?e("UploadMutiImgChunk",{attrs:{"max-num":"100","upload-img":t.form.atlas,"piece-size":1024e3,"is-cut":!0,"fixed-number":"16:9"},on:{"update:uploadImg":function(n){return t.$set(t.form,"atlas",n)},"update:upload-img":function(n){return t.$set(t.form,"atlas",n)}}}):t._e(),t._v(" "),e("p",[e("img",{attrs:{src:"Public/upload/2021-07-22/60f945433fe9e.png",alt:"60f945433fe9e.png"}})]),t._v(" "),e("p",[t._v("UploadMutiImgChunk.vue")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("<template>\n\t<div>\n\t\t<div class=\"clear\" id=\"uu\">\n\t\t<div class=\"item up\" v-for=\"(item,index) in imgs\"\n\t\tv-bind:style=\"{\n\t\t\t'background': 'url('+item+') center center no-repeat',\n\t\t\t'backgroundSize':'cover',\n\t\t\t'position':'relative',\n\t\t\t'backgroundColor':'#fff'}\"\n\t\t>\n\t\t\x3c!-- @click=\"showPre(item,index)\" --\x3e\n\n\n\t\t\t<i class=\"el-icon-close\" @click.stop=\"close(index)\" v-if=\"!onlyPreview\"></i>\n\t\n\t\t\t<i v-if=\"showDown\"  class=\"down\" v-bind:class=\"{'el-icon-download':pindex != index,'el-icon-loading':pindex==index}\" @click.stop=\"down(item,index)\"></i>\n\n\n\t\t\t<span class=\"el-icon-back\" title=\"前移\" @click=\"prev(index)\" v-if=\"!onlyPreview && index>0\"></span>\n\t\t\t<span class=\"el-icon-right\" title=\"后移\" @click=\"next(index)\" v-if=\"!onlyPreview && index<imgs.length-1\"></span>\n\n\n\t\t  <div class=\"pro_lay\" v-if=\"editIndex == index && percent!=0\">\n\t\t\t\t<div class=\"progress\" v-bind:style=\"{'width':percent+'%'}\"></div>\n\t\t  </div>\n\t\t</div>\n\t\t<div class=\"item up box box-align-center\" v-if=\"imgs.length<limtNum && !onlyPreview\">\n\t\t\t<i class=\"el-icon-upload\"></i>\n\n\t\t\t<input multiple :key=\"key\" type=\"file\" @change=\"addImg\" ref=\"inputer\" accept=\"image/png,image/jpeg,image/gif,image/jpg\">\n\n\n\t\t\t<div class=\"pro_lay\" v-if=\"editIndex == -1 && percent!=0\">\n\t\t\t\t<div class=\"progress\" v-bind:style=\"{'width':percent+'%'}\"></div>\n\t\t\t</div>\n\t\t</div>\n\n\n\n\t\t<CutImg\n  \t\tv-bind:is-show.sync=\"isShow\"\n  \t\tv-bind:img-url=\"imgUrl\"\n  \t\tv-bind:call-back=\"initStep\"\n  \t\tv-bind:file-name=\"fileName\"\n  \t\tv-bind:file-type=\"fileType\"\n  \t\tv-bind:fixed-number=\"fixedNumber\"\n  \t\t></CutImg>\n\n\n\n\t</div> \n\n\t\x3c!-- 批量上传提示 --\x3e\n\t\t<div role=\"alert\" v-if=\"isBatch\" style=\"line-height: 14px;\" class=\"el-alert el-alert--warning is-light m-b-5\">\n\t\t\t<i class=\"el-alert__icon el-icon-warning is-big\"></i>\n\t\t    <div class=\"el-alert__content\">\n\t\t    \t<span class=\"el-alert__title is-bold\" v-html=\"batchTip\"></span>\n\t\t        <p class=\"el-alert__description\" v-html=\"rejectName\"></p><i class=\"el-alert__closebtn el-icon-close\" @click=\"closeTip\"></i>\n\t\t    </div>\n\t\t</div>\n\n\t</div>\n\n</template>\n<script>\n\timport FileSaver from 'file-saver';\n\timport CutImg from './CutImg.vue'\n\n\n\texport default{\n\t\tcomponents:{\n\t\t\tCutImg\n\t\t},\n\t\tprops:['maxNum','uploadImg','isDown','onlyPreview','pieceSize','isCut','fixedNumber'],\n\t\tdata(){\n\t\t\treturn {\n\t\t\t\tkey:'0',\n\n\t\t\t\tisShow:false,\n\t\t\t\timg:'',\n\n\t\t\t\timgs:[\n\t\t\t\t\t// '../../static/img/no.jpg'\n\t\t\t\t],\n\t\t\t\teditIndex:-1,\n\t\t\t\tlimtNum:2,\n\n\t\t\t\tmaxW :500,\n        \t\tmaxH :500,\n\n        \t\tshowDown:false,\n        \t\tdowning:[],\n        \t\tpindex:-1, \n\n\n\n        \t\t//分块上传\n        \t\tblobSlice: null,\n\t            file: null,\n\t            identifier: null,\n\t            chunkSize: 1024000,\n\t            chunks: 0,\n\t            currentChunk: 0,\n\t            spark: null,\n\t            fileReader: null,\n\t            tmpDataList: [],\n\t            formDataList: [],\n\t            uploadedList: [],\n\t            start: 0,\n\t            end: 0,\n\t            headers: {},\n\t            // urlCode: code.urlCode.lectureDemand,\n\t            xhr: null,\n\t            pauseStatus: false,\n\t            showProgress: false,\n\t            percent: 0,\n\n\n\t            uploadingChunk:0,  //正在上传的块\n\t            snapshotFlag:0,\n\t            saveType:'local',\n\t            taskId:'',\n\n\n\t            //在线裁图\n\t            isShow:false,\n\t            isCut:false,\n\t            imgUrl:'',\n\t            fileName:'',\n\t            fileType:'',\n\n\t            editLoading:null,\n\n\n\t            isBatch:false,\n\t            batchTip:'',\n\t            rejectName:'',\n\n\t            batchUploading:false,\n\t            uploading:false\n\n\t\t\t}\n\t\t},\n\t\tmethods:{\n\t\t\tcloseTip:function(){\n\t\t\t\tthis.isBatch = false;\n\t\t\t\tthis.tip = '';\n\t\t\t},\n\t\t\tprev:function(index){\n\n\n\t\t\t\tif(index == 0){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tvar tmp = this.imgs[index-1];\n\t\t\t\tthis.imgs[index -1 ] = this.imgs[index];\n\t\t\t\tthis.imgs[index] = tmp;\n\n\t\t\t\tthis.$emit('update:uploadImg',this.imgs.join(','));\n\n\n\t\t\t},\n\t\t\tnext:function(index){\n\n\t\t\t\tif(index == this.imgs.length -1){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tvar tmp = this.imgs[index+1];\n\t\t\t\tthis.imgs[index +1 ] = this.imgs[index];\n\t\t\t\tthis.imgs[index] = tmp;\n\n\t\t\t\tthis.$emit('update:uploadImg',this.imgs.join(','));\n\n\t\t\t},\n\t\t\tdataURLtoBlob:function(baseurl) {\n\t\t\t\t    let arr = baseurl.split(','),\n\t\t\t\t        mime = arr[0].match(/:(.*?);/)[1],\n\t\t\t\t        bstr = atob(arr[1]),\n\t\t\t\t        n = bstr.length,\n\t\t\t\t        u8arr = new Uint8Array(n);\n\t\t\t\t    while (n--) {\n\t\t\t\t        u8arr[n] = bstr.charCodeAt(n);\n\t\t\t\t    }\n\t\t\t\t    return new Blob([u8arr], {\n\t\t\t\t        type: mime\n\t\t\t\t    });\n\t\t\t},\n\t\t\tdown:function(url,index){\n\n \n\n\t\t\t\tif(this.pindex != -1){\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\n\t\t\t\tthis.pindex = index;\n\n\t\t\t\tvar img = new Image();\n\t\t\t\timg.onload = ()=>{\n\n\t\t\t\t\tlet w = img.width;\n\t\t\t\t\tlet h = img.height;\n\n\t\t\t\t\tlet canvas = document.createElement('canvas');\n\t\t\t\t\tlet ctx = canvas.getContext('2d');\n\t\t\t\t\tcanvas.width = w;\n\t\t\t\t\tcanvas.height = h;\n\t\t\t\n\t\t\t\t\tctx.drawImage(img,0,0);\n\n\n\t\t\t\t\tlet fileName = new Date().getFullYear()+''+(new Date().getMonth()+1)+''+new Date().getDate()+''+parseInt(Math.random()*10000);\n\n\t\t\t\t\tFileSaver.saveAs(this.dataURLtoBlob(canvas.toDataURL(\"image/png\")), fileName+\".png\");\n\n\t\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\t\tthis.pindex = -1;\n\t\t\t\t\t})\n\n\t\t\t\t}\n\t\t\t\timg.src = url;\n\t\t\t},\n\t\t\thide:function(){\n\t\t\t\tthis.isShow = false;\n\t\t\t},\n\n\t\t\tshowPre:function(url,editIndex){\n\n\t\t\t\tif(!this.isCut){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tthis.editLoading = this.$loading({\n\t\t          lock: true,\n\t\t          text: 'Loading',\n\t\t          spinner: 'el-icon-loading',\n\t\t          background: 'rgba(0, 0, 0, 0.7)'\n\t\t        });\n\n\n\t\t\t\tthis.editIndex = editIndex;\n\n\t\t\t\tvar _this = this;\n\t\t\t\tvar i = new Image();\n\t\t\t\ti.onload = function(){\n\n\t\t\t\t\tlet w = i.width;\n\t\t\t\t\tlet h = i.height;\n\n\t\t\t\t\tlet canvas = document.createElement('canvas');\n\t\t\t\t\tlet ctx = canvas.getContext('2d');\n\t\t\t\t\tcanvas.width = w;\n\t\t\t\t\tcanvas.height = h;\n\t\t\t\n\t\t\t\t\tctx.drawImage(i,0,0);\n\n\t\t\t\t\ttry{\n\n\t\t\t\t\t\tlet reader = new FileReader();\n\t\t\t\t\t    reader.onload =  (evt)=> {\n\t\t\t\t\t      var base64 = evt.target.result\n\t\t\t\t\t\t      _this.imgUrl = base64;\n\n\t\t\t\t\t\t      var t = url.split('/')\n\n\t\t\t\t\t\t      _this.fileName = t[t.length-1];\n\t\t\t\t\t\t      _this.fileType = 'image/png';\n\t\t\t\t              _this.isShow = true;\n\t\t\t\t              _this.editLoading.close();\n\t\t\t\t\t    };\n\t\t\t\t\t    reader.onerror = ()=>{\n\t\t\t\t              _this.editLoading.close();\n\t\t\t\t\t    }\n\t\t\t\t\t    reader.readAsDataURL(_this.dataURLtoBlob(canvas.toDataURL(\"image/png\")));\n\n\n\n\t\t\t\t\t} catch(e){\n\t\t\t\t\t\tconsole.log(e);\n\t\t\t\t\t\t_this.$message({\n\t\t\t\t\t\t\tmessage:'图片数据转换失败（可能原因：图片跨域）',\n\t\t\t\t\t\t\ttype:'warning'\n\t\t\t\t\t\t})\n\t\t\t\t        _this.editLoading.close();\n\n\t\t\t\t\t}\n\n\t\t\t\n\t\t\t\t}\n\t\t\t\turl = url.indexOf(location.protocol)>-1?url:url.replace(/http.*?\\/\\//g,location.protocol+'//');\n\t\t\t\tconsole.log(url);\n\t\t\t\ti.src = url;\n\n\n\n\t\t\n\n\n\n\t\t\t\t// this.img = img;\n\t\t\t\t// this.isShow = true;\n\t\t\t},\n\n\t\t\tclose:function(index){\n\t\t\t\tthis.imgs.splice(index,1);\n\n\n\t\t\t\tif(typeof this.uploadImg != 'undefined'){\n\t\t\t\t\t    this.$emit('update:uploadImg',this.imgs.join(','));\n\t\t\t\t\n\t\t\t\t}\n\n\n\t\t\t}, \n\t\t\t// 顺序执行promise 构建队列\n\t\t\tqueue(arr) {\n\t\t\t    var res=[];\n\t\t\t    var sequence = Promise.resolve();\n\t\t\t    arr.forEach(function (item) {\n\t\t\t        sequence = sequence.then(item).then(data=>{\n\t\t\t                data!== null && (res.push(data));\n\t\t\t                return res\n\t\t\t       })\n\t\t\t    })\n\n\t\t\t    return sequence\n\t\t\t},\n\t\t\taddImg:function(file){\n\n\t\t\t\tif(this.limtNum == this.imgs.length){\n\n\t\t\t\t\tthis.$message({\n\t\t\t\t\t\tmessage:'最多可上传'+this.limtNum+'张图片！',\n\t\t\t\t\t\ttype:'warning'\n\n\t\t\t\t\t}) \n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\n\t\t\t\tif(this.uploading){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tthis.uploading = true;\n\n\n\t\t\t\tlet inputDOM = this.$refs.inputer;  \n\t\t\t\tif(typeof inputDOM.files[0] == 'undefined'){\n\n\t\t\t\t\treturn false;\n\t\t\t\t}else{\n\n\t\t\t\t\tif(inputDOM.files.length > 1){  //多图批量上传 \n\n\t\t\t\t\t\t// console.log('多图批量上传')\n\t\t\t\t\t\t//如果开启的裁剪功能 需要过滤掉不符合比例的\n\t\t\t\t\t\tif(!this.isCut){\n\n\t\t\t\t\t\t\t//分块上传\n\t\t\t\t\t\t\tthis.batchUploading = true;\n\t\t\t\t\t\n\t\t\t\t\t\t\tthis.isBatch = true;\n\t\t\t\t\t\t\tthis.batchTip=\"<i class=\\\"el-icon-loading\\\"></i>正在批量上传中...请不要关闭对话框及窗口！\";\n\n\t\t\t\t\t\t\tthis.createChunk(inputDOM.files);\n\n\t\t\t\t\t\t}else{ \n\n\t\t\t\t\t\t\tvar rejectName = [];\n\t\t\t\t\t\t\tvar resolveFile = [];  //可以上传的文件列表\n\n\t\t\t\t\t\t\t// ----promise队列方式---\n\t\t\t\t\t\t\t// 过滤掉不符合比例的\n\t\t\t\t\t\t\tvar q = [];\n\t\t\t\t\t\t\tfor (var i = 0; i < inputDOM.files.length; i++) {\n\n\t\t\t\t\t\t\t\t((t)=>{\n\n\t\t\t\t\t\t\t\t\tq.push(_=>{\n\t\t\t\t\t\t\t\t\t\treturn new Promise((resolve,reject)=>{ \n\t\t\t\t\t\t\t\t\t\t\tthis.eqScale(inputDOM.files[t]).then(res=>{\n\t\t\t\t\t\t\t\t\t\t\t\tif(res == '0'){\n\t\t\t\t\t\t\t\t\t\t\t\t\tresolve(inputDOM.files[t])\n\t\t\t\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\t\t\t\trejectName.push(inputDOM.files[t].name);\n\t\t\t\t\t\t\t\t\t\t\t\t\tresolve(null)\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t// reject('fail');\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}).catch(_=>{})\n\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t\t})(i)\n\n\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\tthis.queue(q).then(res=>{\n\n\t\t\t\t\t\t\t\tif(res.length == 0){\n\t\t\t\t\t\t\t\t\tthis.$message({\n\t\t\t\t\t\t\t\t\t\tmessage:'没有符合比例的图片',\n\t\t\t\t\t\t\t\t\t\ttype:'warning'\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\t\tthis.isBatch = true;\n\t\t\t\t\t\t\t\tthis.batchTip=\"<i class=\\\"el-icon-loading\\\"></i>正在批量上传中...请不要关闭对话框及窗口！\";\n\t\t\t\t\t\t\t\tthis.createChunk(res);\n\t\t\t\t\t\t\t\tthis.rejectName = rejectName.length>0?'以下图片不符合比例要求，请稍后重新上传<br>['+rejectName+']':'';\n\t\t\t\t\t\t\t})\n\n\n\t\t\t\t\t\n\t\t\t\t\t\t\t// ------end-------\n\n\n\n\n\t\t\t\t\t\t\t// ------递归方式--------\n\t\t\t\t\t\t\t//过滤掉不符合比例的\n\t\t\t\t\t\t\t// var filterFile = (index)=>{\n\n\t\t\t\t\t\t\t// \t\tthis.eqScale(inputDOM.files[index]).then(res=>{\n\t\t\t\t\t\t\t// \t\t\tvar t = index;\n\t\t\t\t\t\t\t// \t\t\tif(res == '0'){\n\t\t\t\t\t\t\t// \t\t\t\tresolveFile.push(inputDOM.files[t])\n\t\t\t\t\t\t\t// \t\t\t}else{\n\t\t\t\t\t\t\t// \t\t\t\trejectName.push(inputDOM.files[t].name)\n\t\t\t\t\t\t\t// \t\t\t}\n\n\t\t\t\t\t\t\t// \t\t\tif(t == inputDOM.files.length-1){ \n\n\t\t\t\t\t\t\t// \t\t\t\t// console.log('循环完毕')\n\n\t\t\t\t\t\t\t// \t\t\t\tif(resolveFile.length == 0){\n\t\t\t\t\t\t\t// \t\t\t\t\tthis.$message({\n\t\t\t\t\t\t\t// \t\t\t\t\t\tmessage:'没有符合比例的图片',\n\t\t\t\t\t\t\t// \t\t\t\t\t\ttype:'warning'\n\t\t\t\t\t\t\t// \t\t\t\t\t})\n\t\t\t\t\t\t\t// \t\t\t\t\treturn false;\n\t\t\t\t\t\t\t// \t\t\t\t}\n\t\t\t\t\t\t\t// \t\t\t\t//分块上传\n\t\t\t\t\t\t\t// \t\t\t\tthis.isBatch = true;\n\t\t\t\t\t\t\t// \t\t\t\tthis.batchTip=\"<i class=\\\"el-icon-loading\\\"></i>正在批量上传中...请不要关闭对话框及窗口！\";\n\t\t\t\t\t\t\t// \t\t\t\tthis.createChunk(resolveFile);\n\t\t\t\t\t\t\t// \t\t\t\tthis.rejectName = rejectName.length>0?'以下图片不符合比例要求，请稍后重新上传<br>['+rejectName+']':'';\n\n\n\t\t\t\t\t\t\t// \t\t\t}else{\n\t\t\t\t\t\t\t// \t\t\t\tfilterFile(++t);\n\t\t\t\t\t\t\t// \t\t\t}\n\n\t\t\t\t\t\t\t// \t\t})\n\t\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t\t// filterFile(0);\n\n\t\t\t\t\t\t\t// -------end--------------\n \n\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\n\n\t\t\t\t\t}else{  //单图上传\n\t\t\t\t\t\tconsole.log('单图上传')\n\n\t\t\t\t\t\tthis.fileChange(inputDOM.files[0]).then(_=>{\n\t\t\t\t\t\t\tthis.uploading = false;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\n\t\t\t\t}\n\n\n\n\n\t\t\t\t// this.$postWithFile('/admin/system/uploadFile',{\n\t\t\t\t// \tfile:inputDOM.files[0], \n\t\t\t\t// }).then(({code,obj})=>{\n\n\n\n\t\t\t\t// \t(code == '00') &&\n\t\t\t\t// \t(()=>{\n\t\t\t\t// \t\tthis.imgs.push(obj);\n\n\t\t\t\t// \t})()\n\n\t\t\t\t// \tif(typeof this.uploadImg != 'undefined'){\n\t\t\t\t// \t    this.$emit('update:uploadImg',this.imgs.join(','));\n\n\t\t\t\t// \t    this.key++;\n\t\t\t\t// \t}\n\n\t\t\t\t// })\n\t\t\t},\n\n\t\t\tcreateChunk:function(files){\n\n\n\t\t\t\t// ----promise队列实现-----\n\t\t\t\tvar q = [];\n\t\t\t\tfor (var i = 0; i < files.length; i++) {\n\n\t\t\t\t\t((t)=>{\n\n\t\t\t\t\t\tq.push(_=>{\n\t\t\t\t\t\t\treturn new Promise((resolve,reject)=>{\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tthis.initStep(files[t],files[t].name).then(res=>{\n\t\t\t\t\t\t\t\t\tresolve('ok');\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\n\t\t\t\t\t})(i)\n\t\t\t\t}\n\n\t\t\t\tthis.queue(q).then(res=>{\n\n\t\t\t\t\tthis.batchTip=\"上传完毕！\";\n\t\t\t\t\tthis.uploading = false;\n\n\n\t\t\t\t\tif(this.rejectName == ''){\n\t\t\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\t\t\tthis.closeTip();\n\t\t\t\t\t\t},1000)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// ----end------------\n\n\n\t\t\t\t// -----递归实现------\n\t\t\t\t// var u = (index)=>{\n\t\t\t\t// \tthis.initStep(files[index],files[index].name).then(res=>{\n\t\t\t\t// \t\tconsole.log(res); \n\t\t\t\t// \t\tvar t = index;\n\n\t\t\t\t// \t\tif(t == files.length-1){\n\t\t\t\t// \t\t\tthis.batchTip=\"上传完毕！\";\n\n\t\t\t\t// \t\t\tif(this.rejectName == ''){\n\t\t\t\t// \t\t\t\tsetTimeout(()=>{\n\t\t\t\t// \t\t\t\t\tthis.closeTip();\n\t\t\t\t// \t\t\t\t},1000)\n\t\t\t\t// \t\t\t}\n\n\t\t\t\t// \t\t}else{\n\t\t\t\t// \t\t\tsetTimeout(_=>{\n\n\t\t\t\t// \t\t\t\tu(++t);\n\t\t\t\t// \t\t\t},200)\n\t\t\t\t// \t\t}\n\t\t\t\t// \t});\n\t\t\t\t// }\n\t\t\t\t// u(0);\n\t\t\t\t//-----end----------\n\t\t\t},\n\t\t\tgetExt:function(name){\n\t\t\t\tvar tmp = name.split('.');\n\n\t\t\t\treturn tmp[tmp.length-1].toLowerCase();\n\t\t\t},\n\t\t\tcut:function(file,fileName,fileType){\n\n\t\t\t\tlet reader = new FileReader();\n\t\t\t    reader.onload =  (evt)=> {\n\t\t\t      var base64 = evt.target.result\n\t\t\t\t      this.imgUrl = base64;\n\t\t\t\t      this.fileName = fileName;\n\t\t\t\t      this.fileType = fileType;\n\t\t              this.isShow = true;\n\t\t\t    };\n\t\t\t    reader.readAsDataURL(file);  \n\n\t\t\t},\n\t\t\t// taskId 任务 ID 索引\n\t\t\t// chunk 当前 第 N 块\n\t\t\t// size 上传文件块大小\n\t\t\t// totalChunk 总文件 块数 \n\t\t\t// totalSize 文件总大小 \n\t\t\t// chunkFile 文件块对象 \n\t\t\t//  fileType 文件类型 后缀名\n\t\t\t//  snapshotFlag  是否生成快照(视频类型专用)\n\t\t\t// saveType  文件保存路径（oss 、local）\n\t\t\t// module 文件归属模块 (默认 others)\n\t\t\tinitStep:function(file,fileName){\n\n\t\t\t\treturn new Promise((resolve,reject)=>{\n\n\t\t\t\t\tconsole.log('initStep');\n\t\t\t\t\tthis.file = file;\n\t\t\t\t\tthis.taskId =(new Date()).getTime()+''+parseInt(Math.random()*10000000);\n\n\n\t\t\t\t\tconsole.log(this.file.size);\n\t\t\t\t\tconsole.log(this.chunkSize);\n\n\n\t\t\t\t\tthis.chunks = Math.ceil(this.file.size / this.chunkSize);\n\n\n\t\t\t\t\tconsole.log(this.taskId,this.file.size,this.chunks,this.chunkSize);\n\n\t\t\t\t\t// return false;\n\n\t\t\t\t\tthis.fileReader.onload = e => {\n\t\t\t\t\t\tconsole.log(e.target.result);\n\t\t\t\t\t\t// this.spark.append(e.target.result); // Append array buffer\n\t\t                this.currentChunk++;\n\t\t                if (this.currentChunk < this.chunks) {\n\t\t                    this.loadNext();\n\t\t                } else {\n\n\t\t                \tconsole.log('片分完了');\n\t\t                \tconsole.log(this.tmpDataList);\n\t\t                    // this.identifier = this.spark.end(); //文件的MD5身份标识\n\t\t                    this.tmpDataList.map((el, i) => {\n\t\t                        // let formData = new FormData();\n\n\n\t\t                        // formData.append(\"fileType\", this.getExt(this.file.name));\n\t\t                        // formData.append(\"totalSize\", this.file.size);\n\t\t                        // formData.append(\"taskId\", el.taskId);\n\t\t                        // formData.append(\"totalChunk\", this.chunks);\n\t\t                        // formData.append(\"chunkFile\", el.file);\n\t\t                        // formData.append(\"chunk\", el.currentNum + 1);\n\n\n\t\t                        // this.formDataList.push(formData);\n\n\t\t                        this.formDataList.push({\n\t\t                        \t    \"fileType\": this.getExt(fileName),\n\t\t\t\t                        \"totalSize\": this.file.size,\n\t\t\t\t                        \"taskId\": el.taskId,\n\t\t\t\t                        \"totalChunk\": this.chunks,\n\t\t\t\t                        \"file\": el.file,\n\t\t\t\t                        \"size\": el.currentSize,\n\t\t\t\t                        // \"chunk\": (el.currentNum + 1)\n\t\t\t\t                        \"chunk\": this.formDataList.length,\n\t\t\t\t                        'snapshotFlag':this.snapshotFlag,\n\t\t\t\t                        'saveType':this.saveType,\n\t\t\t\t                        'module':'video'\n\n\t\t                        });\n\n\n\n\t\t                    });\n\n\n\t\t                    console.log('生成多个formData表单');\n\t\t                    console.log(this.formDataList);\n\n\t\t                    // this.formDataList.length >0 &&\n\t\t                    // // this.upload();\n\t\t                    // this.uploadByStep(0);\n\n\t\t                    if(this.formDataList.length >0){\n\n\t\t                    \tif(this.isBatch){  //批量上传\n\n\t\t                    \t\tthis.batchUploadChunk().then(res=>{\n\t\t                    \t\t\tresolve('ok')\n\t\t                    \t\t})\n\n\t\t                    \t}else{\n\t\t                    \t\tthis.uploadByStep(0)\n\t\t                    \t}\n\t\t                    }\n\n\n\n\t\t                    // this.checkMd5();\n\t\t                }\n\t\t\t\t\t}\n\t\t\t\t\t this.fileReader.onerror = function() {\n\t\t                this.$Message.error(\"读取文件出错，请重试\");\n\t\t            };\n\t\t            this.loadNext();\n\t\t\t\t\t// this.fileReader.readAsArrayBuffer(file.raw);\n\n\n\t\t\t\t})\n\n\n\t\t\t},\n\n\t\t\t//选择多文件批量上传时 分块上传某一个文件 把每一块都分成一个promise对象 \n\t\t\t//上传完所有的块 表示一个文件上传完毕 最后返回promise 通知再上传下一个文件（下一个文件开始分块并上传）\n\t\t\tbatchUploadChunk:function(){\n\n\n\t\t\t\treturn new Promise((resolve,reject)=>{\n\t\t\t\t\t\tvar q = [];\n\t\t\t\t\t\tfor (var i = 0; i < this.formDataList.length; i++) {\n\n\t\t\t\t\t\t\t((t)=>{\n\t\t\t\t\t\t\t\tq.push(_=>{\n\t\t\t\t\t\t\t\t\treturn new Promise((resolve,reject)=>{\n\n\t\t\t\t\t\t\t\t\t\tthis.percent = parseInt((t/this.chunks)*100);\n\n\t\t\t\t\t\t\t\t\t\tthis.$postWithFile('/admin/system/cutFileUpload',this.formDataList[t]).then(({code,obj})=>{\n\t\t\t\t\t\t\t\t\t\t\tif(code == '00'){\n\t\t\t\t\t\t\t\t\t\t\t\tresolve(obj);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t})(i)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.queue(q).then(res=>{\n\t\t\t\t\t\t\t//上传完成某一个文件的所有块 res最后的一个值里返回的是文件地址\n\t\t\t\t\t\t\tconsole.log(res);\n\t\t\t\t\t\t\tvar obj = res[res.length-1];\n\n\t\t\t\t\t\t\tthis.percent = 100;\n\t\t\t\t\t\t\tconsole.log('上传完成了');\n\t\t\t\t\t\t\t// this.$refs.upload.clearFiles();\n\t\t\t\t\t\t\tthis.key++;\n\n\t\t\t\t\t\t\tif(this.maxNum == 1){\n\t\t\t\t\t\t\t\tthis.imgs = [obj];\n\t\t\t\t\t\t\t}else if(this.editIndex != -1){ //编辑某一个图片\n\t\t\t\t\t\t\t\tthis.imgs[this.editIndex]  = obj;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tthis.imgs.push(obj); \n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(typeof this.uploadImg != 'undefined'){\n\t\t\t\t\t\t\t    this.$emit('update:uploadImg',this.imgs.join(','));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.currentChunk = 0;\n\t\t\t\t\t\t\tthis.uploadingChunk = 0;\n\t\t\t\t\t\t\tthis.start =  0;\n\t\t\t\t\t\t\tthis.end = 0;\n\t\t\t\t\t\t\tthis.formDataList = [];\n\t\t\t\t\t\t\tthis.tmpDataList = [];\n\t\t\t\t\t\t\tthis.editIndex = -1;\n\t\t\t\t\t\t\tthis.taskId = '';\n\n\n\t\t\t\t\t\t\tsetTimeout(_=>{\n\t\t\t\t\t\t\t\tthis.percent = 0;\n\t\t\t\t\t\t\t\tresolve('ok');\n\t\t\t\t\t\t\t},200)\n\n\t\t\t\t\t\t})\n\t\t\t\t})\n\n\t\t\n\n\n\t\t\t},\n\t\t\teqScale:function(imgObj){ \n\n\t\t\t\tvar _this = this;\n\t\t\t\treturn new Promise((resolve,reject)=>{\n\n\t\t\t\t\tlet reader = new FileReader();\n\t\t\t\t    reader.onload =  (evt)=> {\n\t\t\t\t        var img = new Image();\n\t\t\t\t\t\timg.onload = function(){\n\t\t\t\t\t\t\t// console.log(this.width);\n\t\t\t\t\t\t\t// console.log(this.height);\n\n\t\t\t\t\t\t\tlet n = _this.fixedNumber.split(\":\"); \n\t\t\t\t\t\t\tlet rate1 = n[0]/n[1];\n\t\t\t\t\t\t\tlet rate2 = this.width/this.height; \n\t\t\t\t\t\t\tif(parseInt(rate1*100) == parseInt(rate2*100)){\n\t\t\t\t\t\t\t\tresolve('0')\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tresolve('1')\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\timg.src = evt.target.result\n\n\t\t\t\t    };\n\t\t\t\t    reader.readAsDataURL(imgObj);  \n\n\t\t\t\t})\n\n\n\t\t\t},\n\t\t\tfileChange:function(file){\n\n\t\t\t\tconsole.log(file);\n\n\t\t\t\treturn new Promise((resolve,reject)=>{\n\t\t\t\t\tif(!this.isCut){\n\n\t\t\t\t\t\tthis.initStep(file,file.name).then(()=>{\n\t\t\t\t\t\t\tresolve('ok')\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}else{\n\n\t\t\t\t\t\tconsole.log(file);\n\n\t\t\t\t\t\tthis.eqScale(file).then(res=>{\n\n\t\t\t\t\t\t\tif(res == '0'){\n\t\t\t\t\t\t\t\tconsole.log('直接上传')\n\t\t\t\t\t\t\t\tthis.initStep(file,file.name).then(()=>{\n\t\t\t\t\t\t\t\t\tresolve('ok')\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tthis.cut(file,file.name,file.type).then(()=>{\n\t\t\t\t\t\t\t\t\tresolve('ok')\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t})\n\n\n\t\t\t\t\t\t// this.cut(file,file.name,file.type);\n\n\t\t\t\t\t}\n\t\t\t\t})\n\n\n\t\t\n\t\t\t},\n\t\t\tuploadByStep(num){\n\n\t\t\t\treturn new Promise((resolve,reject)=>{\n\n\t\t\t\t\tthis.percent = parseInt((num/this.chunks)*100);\n\n\t\t\t\t\tthis.uploadingChunk = num;\n\n\t\t\t\t\tthis.$postWithFile('/admin/system/cutFileUpload',this.formDataList[this.uploadingChunk]).then(({code,obj})=>{\n\t\t\t\t\t\tif(code == '00'){\n\n\t\t\t\t\t\t\tif(this.uploadingChunk < (this.formDataList.length-1)){\n\t \n\t\t\t\t\t\t\t\t\tnum++;\n\t\t\t\t\t\t\t\t\tthis.uploadByStep(num); \n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t}else{\n\n\t\t\t\t\t\t\t\tthis.percent = 100;\n\n\n\t\t\t\t\t\t\t\tconsole.log('上传完成了');\n\t\t\t\t\t\t\t\t// this.$refs.upload.clearFiles();\n\t\t\t\t\t\t\t\tthis.key++;\n\n\t\t\t\t\t\t\t\tif(this.maxNum == 1){\n\t\t\t\t\t\t\t\t\tthis.imgs = [obj];\n\t\t\t\t\t\t\t\t}else if(this.editIndex != -1){ //编辑某一个图片\n\t\t\t\t\t\t\t\t\tthis.imgs[this.editIndex]  = obj;\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tthis.imgs.push(obj); \n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(typeof this.uploadImg != 'undefined'){\n\t\t\t\t\t\t\t\t    this.$emit('update:uploadImg',this.imgs.join(','));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.currentChunk = 0;\n\t\t\t\t\t\t\t\tthis.uploadingChunk = 0;\n\t\t\t\t\t\t\t\tthis.start =  0;\n\t\t\t\t\t\t\t\tthis.end = 0;\n\t\t\t\t\t\t\t\tthis.formDataList = [];\n\t\t\t\t\t\t\t\tthis.tmpDataList = [];\n\t\t\t\t\t\t\t\tthis.editIndex = -1;\n\t\t\t\t\t\t\t\tthis.taskId = '';\n\t\t\t\t\t\t\t\tthis.isBatch = false;\n\n\n\t\t\t\t\t\t\t\tsetTimeout(()=>{\n\n\t\t\t\t\t\t\t\t\tthis.percent = 0;\n\n\t\t\t\t\t\t\t\t\tresolve('ok');\n\n\n\n\t\t\t\t\t\t\t\t},2000)\n\n\n\t\t\t\t\t\t\t}\n\t \n\n\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t})\n\n\t\t\n\n\t\t\t},\n\t\t\tupload:function(){\n\t\t\t\tvar tmp = [];\n\t\t\t\tthis.formDataList.forEach(item=>{\n\t\t\t\t\ttmp.push(\n\t\t\t\t\t\t\tnew Promise((resolve, reject)=>{\n\t\t\t\t\t\t\t\tthis.$postWithFile('/admin/file/cutFileUpload',item).then((code)=>{\n\t\t\t\t\t\t\t\t\tif(code == '00'){\n\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t)\n\t\t\t\t})\n\n\t\t\t\tPromise.all(tmp).then(()=>{ \n\t\t\t\t    console.log('callback')\n\n\t\t\t\t\tthis.$refs.upload.clearFiles();\n\n\t\t\t\t})\n\n\n\t\t\t},\n\t\t\tloadNext:function(){\n\t\t\t\t(this.start = this.currentChunk * this.chunkSize),\n\t                (this.end =\n\t                    this.start + this.chunkSize >= this.file.size\n\t                        ? this.file.size\n\t                        : this.start + this.chunkSize);\n\t            let pieceFile = this.blobSlice.call(\n\t                this.file,\n\t                this.start,\n\t                this.end\n\t            );\n\n\t            console.log(pieceFile);\n\n\n\t            pieceFile.name = this.file.name;\n\t            let tmpObj = {\n\t                file: pieceFile,\n\t                currentSize: this.end - this.start,\n\t                currentNum: this.currentChunk,\n\t                taskId:this.taskId\n\t            };\n\t            this.tmpDataList.push(tmpObj);\n\t            this.fileReader.readAsArrayBuffer(pieceFile);\n\t\t\t}\n\n\t\t},\n\t\tmounted(){\n\n\t\t\tif(typeof this.maxNum !='undefined'){\n\t\t\t\tthis.limtNum = this.maxNum;\n\t\t\t} \n\t\n\t\t\tconsole.log(this.chunkSize);\n\n\t\t},\n\t\tcreated(){\n\n\t\t\tthis.blobSlice =\n\t            window.File.prototype.slice ||\n\t            window.File.prototype.mozSlice ||\n\t            window.File.prototype.webkitSlice;\n\t        // this.spark = new SparkMD5.ArrayBuffer();\n\t        this.fileReader = new FileReader();\n\t        this.percent = 0;\n\t\n\t\t},\n\t\tcomputed:{\n\t\t\t// doing:function(){\n\t\t\t// \treturn this.index!=-1?this.downing[this.index]:false;\n\t\t\t// }\n\t\t},\n\t\twatch:{\n\t\t\t'uploadImg':{\n\t\t\t\thandler:function(v){\n\n\t\t\t\t\tif(typeof v !='undefined' && v!=''){\n\n\t\t\t\t\t\tif(v.indexOf(',')>-1){  //多个图片\n\t\t\t\t\t\t\tthis.imgs = v.split(',');\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tthis.imgs = [v];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.imgs = [];\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\timmediate:true\n\t\t\t},\n\t\t\t'isDown':{\n\t\t\t\thandler:function(v){\n\t\t\t\t\tif(typeof v !='undefined'){\n\t\t\t\t\t\tthis.showDown = v;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\timmediate:true\n\t\t\t},\n\t\t\t'pieceSize':{\n\t\t\t\thandler:function(v){\n\t\t\t\t\tconsole.log(typeof v);\n\t\t\t\t\tif(typeof v !='undefined'){\n\n\t\t\t\t\t\tif(v <=1024000){\n\t\t\t\t\t\t\tthis.chunkSize = 1024000\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tthis.chunkSize = v;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.chunkSize = 1024000\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.log(this.chunkSize);\n\n\t\t\t\t},\n\t\t\t\timmediate:true\n\t\t\t},\n\t\t\t'isCut':{\n\t\t\t\thandler:function(v){\n\t\t\t\t\tif(typeof v !='undefined'){\n\t\t\t\t\t\tthis.isCut = v;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\timmediate:true\n\t\t\t},\n\t\t\t'isShow':function(v){\n\t\t\t\tif(!v){\n\t\t\t\t\t// console.log('需要清空input file');\n\t\t\t\t\tthis.key++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n<\/script>\n<style scoped>\n\t.clear:after{\n\t\tcontent: \"\";\n\t\tdisplay: block;\n\t\tclear: both;\n\t\tline-height: 0;\n\t\tfont-size: 0;\n\t\theight: 0;\n\t}\n\t.item{\n\t\tposition: relative;\n\t\tfloat: left;\n\t\twidth: 100px;\n\t\theight: 100px;\n\n\t\t-webkit-transform-origin: left top;\n\t\t-moz-transform-origin: left top;\n\t\t-ms-transform-origin: left top;\n\t\t-o-transform-origin: left top;\n\t\ttransform-origin: left top;\n\t\t-webkit-transform: scale(0.9);\n\t\t-ms-transform: scale(0.9);\n\t\t-o-transform: scale(0.9);\n\t\ttransform: scale(0.9);\n\t}\n\t.item:after{\n\t\tcontent: \"\";\n\t\tdisplay: block;\n\n\t\tmargin-top:100%;\n\n\t}\n\t.up{\n\t\tbox-sizing:border-box;\n\t\tborder:dashed #c3c3c3 1px; \n\t\tbackground: #fff;\n\t\tborder-radius: 4px;\n\t\tbackground-size: contain !important;\n\n\t}\n\t.up input{\n\t\tposition: absolute;\n\t\tleft:0;\n\t\ttop:0;\n\t\tbottom:0;\n\t\twidth: 100%;\n\t\theight:100%;\n\t\topacity: 0;\n\t}\n\t.item .el-icon-close{\n\t\tposition: absolute;\n\t\ttop: 1px;\n\t    right: 1px;\n\t    font-size: 14px;\n\t\tbackground: #0166FF;\n\t\tcolor: #fff;\n\t\tborder-radius: 15px;\n\t\tpadding:5px;\n\t\tcursor: pointer;\n\n\n\t}\n\t.item .down{\n\t\tposition: absolute;\n\t\tbottom:0;\n\t\tright:0;\n\t\tfont-size: 20px;\n\t\t/*background: #FC9153;*/\n\t\tcolor: #FC9153;\n\t\tborder-radius: 15px;\n\t\tpadding:5px;\n\t\tcursor: pointer;\n\t}\n\t.el-icon-upload{\n\t\tfont-size: 50px;\n\t\tcolor: #999\n\t}\n\n\t.pro_lay{\n\t\tposition: absolute;\n\t\theight: 3px;\n\t\tline-height:10px;\n\t\tleft:10px;\n\t\tright:10px;\n\t\tbottom:10px;\n\t\tbackground: #c3c3c3;\n\t}\n\t.progress{\n\t\tposition: absolute;\n\t\tleft:0;\n\t\ttop:0;\n\t\theight: 3px;\n\t\tbackground: #409EFF\n\t}\n\t.el-icon-back{\n\t\tposition: absolute;\n\t\tcolor:#fff;\n\t\tright:18px;\n\t\tbottom:1px;\n\t\tbackground: #0166FF;\n\t\tcursor: pointer;\n\n\n\t}\n\t.el-icon-right{\n\t\tposition: absolute;\n\t\tcolor:#fff;\n\t\tright:1px;\n\t\tbottom:1px;\n\t\tbackground: #0166FF;\n\t\tcursor: pointer;\n\n\n\t}\n\n</style>\n")])])]),e("p",[t._v("CutImg.vue")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<template>\n\t<div>\n\t\t<el-dialog  :append-to-body="true"\n\t\t    title="图片裁剪"\n\t\t    :visible.sync="show" \n\t\t    @close="close">\n\t\t    <div style="height: 400px;">\n\t\t    \t<VueCropper  \n\t\t\t\t  ref="cropper"\n\t\t\t\t  v-bind:img="option.img" \n\t\t\t\t  :outputSize="option.outputSize"\n                :outputType="option.outputType"\n                :info="true"\n                :full="option.full"\n                :canMove="option.canMove"\n                :canMoveBox="option.canMoveBox"\n                :original="option.original"\n                :autoCrop="option.autoCrop"\n                :fixed="option.fixed"\n                :fixedNumber="option.fixedNumber"\n                :centerBox="option.centerBox"\n                :infoTrue="option.infoTrue"\n                :fixedBox="option.fixedBox"  \n\t\t\t\t></VueCropper> \n\n\n\t\t    </div>\n\t\t  \n\t\t    <span slot="footer">\n\t\t    \t<span class="pull-left m-t-10">\n\t\t    \t\t<i class="el-icon-warning text-warning"></i>\n\n\t\t    \t\t触控板双指上下划动\n\t\t\t\t\t    \t<i class="iconfont icon-shuangzhishangxiahua"></i>\n\t\t\t\t\t    \t或使用鼠标滚轮\n\t\t\t\t\t    \t<i class="iconfont icon-shubiaogunlun-caozuotishi-"></i>\n\t\t\t\t\t    \t可使图片缩放\n\t\t    \t</span>\n\t\t        <el-button size="small" @click="close(\'\')">取 消</el-button>\n\t\t        <el-button size="small" type="primary" @click="cut" :loading="doing" :disabled="doing">确 定</el-button>\n\t\t    </span>\n\t\t</el-dialog>\n\t</div>\n</template>\n<script> \n\timport { VueCropper }  from \'vue-cropper\'\n\n\texport default{\n\t\tcomponents:{\n\t\t\tVueCropper\n\t\t},\n\t\tprops:[\'isShow\',\'imgUrl\',\'callBack\',\'fixedNumber\',\'fileName\',\'fileType\'],\n\t\tdata(){\n\t\t\treturn {\n\t\t\t\tshow:false,\n\t\t\t\toption:{\n\t\t\t\t\timg:\'\',  \n\t\t\t\t\tinfo: true, // 裁剪框的大小信息\n                    outputSize: 0.8, // 裁剪生成图片的质量\n                    outputType: \'png\', // 裁剪生成图片的格式\n                    canScale: true, // 图片是否允许滚轮缩放\n                    autoCrop: true, // 是否默认生成截图框\n                    autoCropWidth: 600, // 默认生成截图框宽度\n                    autoCropHeight: 800, // 默认生成截图框高度\n                    fixedBox: false, // 固定截图框大小 不允许改变\n                    fixed: true, // 是否开启截图框宽高固定比例\n                    fixedNumber: [3, 4], // 截图框的宽高比例\n                    full: false, // 是否输出原图比例的截图\n                    canMoveBox: true, // 截图框能否拖动\n                    original: false, // 上传图片按照原始比例渲染\n                    high: true,\n                    centerBox: false, // 截图框是否被限制在图片里面\n                    infoTrue: true // true 为展示真实输出图片宽高 false 展示看到的截图框宽高\n\n\t\t\t\t},\n\t\t\t\tdoing:false,\n\t\t\t\tfileType:\'image/png\',\n\t\t\t\tkey:0,\n\t\t\t}\n\t\t},\n\t\tmethods:{\n\t\t\tclose:function(url=\'\'){\n\t\t\t\t// this.callBack && this.callBack(url);\n\t\t\t\tthis.$emit(\'update:isShow\',false);\n\n\t\t\t},\n\t\t\t// 将base64的图片转换为file文件\n\t        convertBase64UrlToBlob(urlData) {\n\t            let bytes = window.atob(urlData.split(\',\')[1]);//去掉url的头，并转换为byte\n\t            //处理异常,将ascii码小于0的转换为大于0\n\t            let ab = new ArrayBuffer(bytes.length);\n\t            let ia = new Uint8Array(ab);\n\t            for (var i = 0; i < bytes.length; i++) {\n\t                ia[i] = bytes.charCodeAt(i);\n\t            }\n\t            return new Blob([ab], { type: this.fileType });\n\t        }, \n\t\t\tcut:function(){\n\t\t\t\tif(this.doing){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tthis.doing = true;\n \n\t\t\t\t\t\tthis.$refs.cropper.getCropData((data) => { \n\n\t\t\t\t\t\t\tconsole.log(this.convertBase64UrlToBlob(data));\n\n\t\t\t\t\t\t\tthis.callBack && this.callBack(this.convertBase64UrlToBlob(data),this.fileName);\n\t\t\t\t\t\t\tthis.$emit(\'update:isShow\',false);\n\n\n\t\t\t\t\t\t\t// this.$postWithFile(\'/system/base64UploadFile\',{file:data.replace(\'data:image/png;base64,\',\'\')}).then(({code,obj})=>{\n\n\t\t\t\t\t\t\t// \tif(code == \'00\'){\n\n\t\t\t\t\t\t\t// \t\tthis.$message({\n\t\t\t\t\t\t\t// \t\t\tmessage:\'上传成功！\',\n\t\t\t\t\t\t\t// \t\t\ttype:\'success\'\n\t\t\t\t\t\t\t// \t\t})\n\n\t\t\t\t\t\t\t// \t\t// this.close(obj);\n\n\t\t\t\t\t\t\t// \t\tthis.callBack && this.callBack(obj);\n\n\t\t\t\t\t\t\t// \t\tthis.$emit(\'update:isShow\',false);\n\n\t\t\t\t\t\t\t// \t\tsetTimeout(()=>{\n\n\t\t\t\t\t\t\t// \t\t\tthis.doing = false;\n\n\t\t\t\t\t\t\t// \t\t},2000);\n\n\n\n\n\t\t\t\t\t\t\t// \t}\n\n\n\t\t\t\t\t\t\t// })\n\n\t\t\t\t\t\t})\n \n\n\t\t\t}\n\t\t\t \n\t\t},\n\t\tmounted(){\n\n\t\t},\n\t\tcreated(){\n\n\t\t},\n\t\tcomputed:{\n\n\t\t},\n\t\twatch:{\n\t\t\tisShow:{\n\t\t\t\thandler:function(v){ \n\t\t\t\t\tthis.option = {\n\t\t\t\t\t\t\t\t...this.option,\n\t\t\t\t\t\t\t\t...{img:this.imgUrl}\n\t\t\t\t\t\t\t}\n\t\t\t\t\tthis.show = v;\n\t\t\t\t\tif(v){\n\t\t\t\t\t\tthis.doing = false;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\timmediate:true\n\n\t\t\t},\n\t\t\tfixedNumber:{\n\t\t\t\thandler:function(v){\n\t\t\t\t\tif(v){\n\t\t\t\t\t\tthis.option = {\n\t\t\t\t\t\t\t...this.option,\n\t\t\t\t\t\t\t...{\n\t\t\t\t\t\t\t\tfixedNumber:v.split(\':\'), \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t// this.option.fixedNumber = v.split(\':\');\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\timmediate:true\n\t\t\t}\n\n\t\t}\n\t}\n\n<\/script>\n<style scoped>\n\n.title_content .iconfont{\n\tfont-size: 14px;\n}\n\n</style>\n\n')])])]),e("backTop")],1)}),[],!1,null,null,null);n.default=s.exports}}]);