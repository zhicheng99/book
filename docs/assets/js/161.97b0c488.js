(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{440:function(e,a,v){"use strict";v.r(a);var t=v(10),r=Object(t.a)({},(function(){var e=this,a=e.$createElement,v=e._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"系统学习前端之-formdata-详解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#系统学习前端之-formdata-详解"}},[e._v("#")]),e._v(" 系统学习前端之 FormData 详解")]),e._v(" "),v("p",[e._v("FormData")]),e._v(" "),v("ol",[v("li",[e._v("概述")])]),e._v(" "),v("p",[e._v("FormData 类型其实是在 XMLHttpRequest 2 级定义的，它是为序列化表以及创建与表单格式相同的数据（当然是用于 XHR 传输）提供便利。")]),e._v(" "),v("ol",[v("li",[e._v("构造函数")])]),e._v(" "),v("p",[e._v("创建一个 formData 对象实例有几种方式")]),e._v(" "),v("ol",[v("li",[e._v("创建一个空对象实例")])]),e._v(" "),v("p",[e._v("var formData = new FormData();")]),e._v(" "),v("p",[e._v("此时可以调用 append()方法来添加数据")]),e._v(" "),v("ol",[v("li",[e._v("使用已有的表单来初始化一个对象实例")])]),e._v(" "),v("p",[e._v("假如现在页面已经有一个表单")]),e._v(" "),v("p",[e._v('<formid="myForm"action=""method="post"><inputtype="text"name="name"> 名字    <inputtype="password"name="psw"> 密码    <inputtype="submit"value="提交">form>')]),e._v(" "),v("p",[e._v("我们可以使用这个表单元素作为初始化参数，来实例化一个 formData 对象")]),e._v(" "),v("p",[e._v('// 获取页面已有的一个 form 表单 var form = document.getElementById("myForm");// 用表单来初始化 var formData = new FormData(form);// 我们可以根据 name 来访问表单中的字段 var name = formData.get("name"); // 获取名字 var psw = formData.get("psw"); // 获取密码// 当然也可以在此基础上，添加其他数据 formData.append("token","kshdfiwi3rh");')]),e._v(" "),v("ol",[v("li",[e._v("操作方法")])]),e._v(" "),v("p",[e._v("首先，我们要明确 formData 里面存储的数据形式，一对 key/value 组成一条数据，key 是唯一的，一个 key 可能对应多个 value。如果是使用表单初始化，每一个表单字段对应一条数据，它们的 HTML name 属性即为 key 值，它们 value 属性对应 value 值。")]),e._v(" "),v("table",[v("thead",[v("tr",[v("th",[e._v("key")]),e._v(" "),v("th",[e._v("value")])])]),e._v(" "),v("tbody",[v("tr",[v("td",[e._v("k1")]),e._v(" "),v("td",[e._v("[v1,v2,v3]")])]),e._v(" "),v("tr",[v("td",[e._v("k2")]),e._v(" "),v("td",[e._v("k4")])])])]),e._v(" "),v("p",[e._v("3.1 获取值")]),e._v(" "),v("p",[e._v("我们可以通过 get(key)/getAll(key)来获取对应的 value，")]),e._v(" "),v("p",[e._v('formData.get("name"); // 获取 key 为 name 的第一个值 formData.get("name"); // 返回一个数组，获取 key 为 name 的所有值')]),e._v(" "),v("p",[e._v("3.2 添加数据")]),e._v(" "),v("p",[e._v("我们可以通过 append(key, value)来添加数据，如果指定的 key 不存在则会新增一条数据，如果 key 存在，则添加到数据的末尾")]),e._v(" "),v("p",[e._v('formData.append("k1", "v1");formData.append("k1", "v2");formData.append("k1", "v1");formData.get("k1"); // "v1"formData.getAll("k1"); // ["v1","v2","v1"]')]),e._v(" "),v("p",[e._v("3.3 设置修改数据")]),e._v(" "),v("p",[e._v("我们可以通过 set(key, value)来设置修改数据，如果指定的 key 不存在则会新增一条，如果存在，则会修改对应的 value 值。")]),e._v(" "),v("p",[e._v('formData.append("k1", "v1");formData.set("k1", "1");formData.getAll("k1"); // ["1"]')]),e._v(" "),v("p",[e._v("3.4 判断是否该数据")]),e._v(" "),v("p",[e._v("我们可以通过 has(key)来判断是否对应的 key 值")]),e._v(" "),v("p",[e._v('formData.append("k1", "v1");formData.append("k2",null);formData.has("k1"); // trueformData.has("k2"); // trueformData.has("k3"); // false')]),e._v(" "),v("p",[e._v("3.5 删除数据")]),e._v(" "),v("p",[e._v("通过 delete(key)，来删除数据")]),e._v(" "),v("p",[e._v('formData.append("k1", "v1");formData.append("k1", "v2");formData.append("k1", "v1");formData.delete("k1");formData.getAll("k1"); // []')]),e._v(" "),v("p",[e._v("3.6 遍历")]),e._v(" "),v("p",[e._v("我们可以通过 entries()来获取一个迭代器，然后遍历所有的数据，")]),e._v(" "),v("p",[e._v('formData.append("k1", "v1");formData.append("k1", "v2");formData.append("k2", "v1");var i = formData.entries();i.next(); // {done:false, value:["k1", "v1"]}i.next(); // {done:fase, value:["k1", "v2"]}i.next(); // {done:fase, value:["k2", "v1"]}i.next(); // {done:true, value:undefined}')]),e._v(" "),v("p",[e._v("可以看到返回迭代器的规则")]),e._v(" "),v("ol",[v("li",[e._v("每调用一次 next()返回一条数据，数据的顺序由添加的顺序决定")]),e._v(" "),v("li",[e._v("返回的是一个对象，当其 done 属性为 true 时，说明已经遍历完所有的数据，这个也可以作为判断的依据")]),e._v(" "),v("li",[e._v("返回的对象的 value 属性以数组形式存储了一对 key/value，数组下标 0 为 key，下标 1 为 value，如果一个 key 值对应多个 value，会变成多对 key/value 返回")])]),e._v(" "),v("p",[e._v("我们也可以通过 values()方法只获取 value 值")]),e._v(" "),v("p",[e._v('formData.append("k1", "v1");formData.append("k1", "v2");formData.append("k2", "v1");var i = formData.entries();i.next(); // {done:false, value:"v1"}i.next(); // {done:fase, value:"v2"}i.next(); // {done:fase, value:"v1"}i.next(); // {done:true, value:undefined}')]),e._v(" "),v("ol",[v("li",[e._v("发送数据")])]),e._v(" "),v("p",[e._v("我们可以通过 xhr 来发送数据")]),e._v(" "),v("p",[e._v('var xhr = new XMLHttpRequest();xhr.open("post","login");xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");xhr.send(formData);')]),e._v(" "),v("p",[e._v("这种方式可以来实现文件的异步上传。")]),e._v(" "),v("p",[e._v("参考")]),e._v(" "),v("ol",[v("li",[v("a",{attrs:{href:"http://caniuse.com/#search=formdata",target:"_blank",rel:"noopener noreferrer"}},[e._v("兼容性查询"),v("OutboundLink")],1)]),e._v(" "),v("li",[v("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/FormData",target:"_blank",rel:"noopener noreferrer"}},[e._v("MDN"),v("OutboundLink")],1)]),e._v(" "),v("li",[e._v("《JavaScript 高级程序设计》")])]),e._v(" "),v("backTop")],1)}),[],!1,null,null,null);a.default=r.exports}}]);